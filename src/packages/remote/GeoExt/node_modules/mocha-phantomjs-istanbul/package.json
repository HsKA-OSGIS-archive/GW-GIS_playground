{
  "name": "mocha-phantomjs-istanbul",
  "version": "0.0.2",
  "description": "collect istanbul coverage from instrumented client-side Mocha tests with PhantomJS",
  "keywords": [
    "mocha",
    "phantomjs",
    "istanbul",
    "coverage",
    "test",
    "testing",
    "runner",
    "unit",
    "bdd"
  ],
  "author": {
    "name": "Willem Bult",
    "email": "willem.bult@gmail.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "gulp test"
  },
  "dependencies": {},
  "devDependencies": {
    "chai": "^1.10.0",
    "gulp": "^3.8.10",
    "gulp-jshint": "^1.9.0",
    "gulp-mocha": "^2.0.0",
    "mocha": "^2.1.0",
    "mocha-phantomjs": "^3.5.2",
    "path": "^0.4.9",
    "phantomjs": "^1.9.0"
  },
  "homepage": "https://github.com/willembult/mocha-phantomjs-istanbul",
  "repository": {
    "type": "git",
    "url": "git://github.com/willembult/mocha-phantomjs-istanbul.git"
  },
  "bugs": {
    "url": "https://github.com/willembult/mocha-phantomjs-istanbul/issues"
  },
  "license": "MIT",
  "readme": "# mocha-phantomjs-istanbul\n> Collect [istanbul](https://github.com/gotwarlost/istanbul) coverage stats from client-side [Mocha](http://mochajs.org) tests with [PhantomJS](https://phantomjs.org) using [mocha-phantomjs](https://github.com/metaskills/mocha-phantomjs).\n\nCollects coverage data from a istanbul-instrumented test suite run in the browser and saves it to a .json file for further processing (for example with [gulp-istanbul-report](https://github.com/willembult/gulp-istanbul-report)).\n\nWorks as a hook into mocha-phantomjs. See these discussions for more info: https://github.com/metaskills/mocha-phantomjs/issues/99, https://github.com/metaskills/mocha-phantomjs/pull/113. \n\n[![Build Status](https://travis-ci.org/willembult/mocha-phantomjs-istanbul.svg?branch=master)](https://travis-ci.org/willembult/mocha-phantomjs-istanbul)\n\n## Installation\n```shell\n$ npm install mocha-phantomjs-istanbul --save-dev\n```\n\n## Usage\nYou'll need to specify two things when running mocha-phantomjs: \n* this module as the hook to use\n* the destination file for the coverage info. This is passed as an option to mocha-phantomjs. It's a bit of a hack, because it's not an option mocha-phantomjs actually recognizes, but this allows our hook to find it again.\n\n### shell\nYou'll probably not be running this from the command line, but you could:\n```shell\nphantomjs ./node_modules/mocha-phantomjs/lib/mocha-phantomjs.coffee test-runner.html spec '{\"hooks\": \"mocha-phantomjs-istanbul\", \"coverageFile\": \".coverage.json\"}'\n```\n\n### gulp\nIt's more likely you'll run this from [gulp](http://gulpjs.com) with [gulp-mocha-phantomjs](https://github.com/mrhooray/gulp-mocha-phantomjs). The options get passed through using `phantomjs`.\n\n```javascript\nvar mochaPhantomJS = require('gulp-mocha-phantomjs');\n\ngulp.task('test', function () {\n  gulp.src('test-runner.html', {read: false})\n    .pipe(mochaPhantomJS({\n      phantomjs: {\n        hooks: 'mocha-phantomjs-istanbul',\n        coverageFile: './coverage/coverage.json'\n      },\n      reporter: 'spec'\n  }));\n});\n```\n\n### What to do with the coverageFile? \nUse it with some other plugin to turn the JSON file into a full report. If you use gulp, you could use [gulp-istanbul-report](https://github.com/willembult/gulp-istanbul-report).\n\n## License\n[MIT License](https://raw.githubusercontent.com/willembult/mocha-phantomjs-istanbul/master/LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "mocha-phantomjs-istanbul@0.0.2",
  "_from": "mocha-phantomjs-istanbul@0.0.2"
}
