Ext.define("GeoExt.component.FeatureRenderer",{extend:"Ext.Component",alias:"widget.gx_renderer",config:{imgCls:"",minWidth:20,minHeight:20,resolution:1,feature:undefined,pointFeature:undefined,lineFeature:undefined,polygonFeature:undefined,textFeature:undefined,symbolizers:undefined,symbolType:"Polygon"},initComponent:function(){var b=this;var c=this.getId();this.autoEl={tag:"div","class":this.getImgCls(),id:c};if(!this.getLineFeature()){this.setLineFeature(new ol.Feature({geometry:new ol.geom.LineString([[-8,-3],[-3,3],[3,-3],[8,3]])}))}if(!this.getPointFeature()){this.setPointFeature(new ol.Feature({geometry:new ol.geom.Point([0,0])}))}if(!this.getPolygonFeature()){this.setPolygonFeature(new ol.Feature({geometry:new ol.geom.Polygon([[[-8,-4],[-6,-6],[6,-6],[8,-4],[8,4],[6,6],[-6,6],[-8,4]]])}))}if(!this.getTextFeature()){this.setTextFeature(new ol.Feature({geometry:new ol.geom.Point([0,0])}))}this.map=new ol.Map({controls:[],interactions:[],layers:[new ol.layer.Vector({source:new ol.source.Vector()})]});var a=this.getFeature();if(!a){this.setFeature(this["get"+this.getSymbolType()+"Feature"]())}else{this.applyFeature(a)}b.callParent(arguments)},onRender:function(){this.callParent(arguments);this.drawFeature()},afterRender:function(){this.callParent(arguments);this.initCustomEvents()},initCustomEvents:function(){this.clearCustomEvents();this.el.on("click",this.onClick,this)},clearCustomEvents:function(){if(this.el&&this.el.clearListeners){this.el.clearListeners()}},onClick:function(){this.fireEvent("click",this)},beforeDestroy:function(){this.clearCustomEvents();if(this.map){this.map.setTarget(null)}},onResize:function(){this.setRendererDimensions();this.callParent(arguments)},drawFeature:function(){this.map.setTarget(this.el.id);this.setRendererDimensions()},setRendererDimensions:function(){var h=this.feature.getGeometry().getExtent();var j=ol.extent.getWidth(h);var g=ol.extent.getHeight(h);var e=this.initialConfig.resolution;if(!e){e=Math.max(j/this.width||0,g/this.height||0)||1}this.map.setView(new ol.View({minResolution:e,maxResolution:e,projection:new ol.proj.Projection({units:"pixels"})}));var c=Math.max(this.width||this.getMinWidth(),j/e);var i=Math.max(this.height||this.getMinHeight(),g/e);var b=ol.extent.getCenter(h);var f=c*e/2;var d=i*e/2;var a=[b[0]-f,b[1]-d,b[0]+f,b[1]+d];this.el.setSize(Math.round(c),Math.round(i));this.map.updateSize();this.map.getView().fitExtent(a,this.map.getSize())},applySymbolizers:function(b){var a=this.getFeature();if(a&&b){a.setStyle(b)}return b},applyFeature:function(a){var c=this.getSymbolizers();if(a&&c){a.setStyle(c)}if(this.map){var b=this.map.getLayers().item(0).getSource();b.clear();b.addFeature(a)}return a},update:function(a){if(a.feature){this.setFeature(a.feature)}if(a.symbolizers){this.setSymbolizers(a.symbolizers)}}});Ext.define("GeoExt.data.model.Base",{extend:"Ext.data.Model",requires:["Ext.data.identifier.Uuid"],schema:{namespace:"GeoExt.data.model"},identifier:"uuid"});Ext.define("GeoExt.data.model.Layer",{extend:"GeoExt.data.model.Base",statics:{createFromLayer:function(a){return this.getProxy().getReader().readRecords([a]).records[0]}},fields:[{name:"isLayerGroup",type:"boolean",convert:function(b,a){var c=a.getOlLayer();if(c){return(c instanceof ol.layer.Group)}}},{name:"text",type:"string",convert:function(b,a){if(!b&&a.get("isLayerGroup")){return"ol.layer.Group"}else{return b}}},{name:"opacity",type:"number",convert:function(b,a){var c;if(a.data instanceof ol.layer.Base){c=a.getOlLayer();return c.get("opacity")}}},{name:"minResolution",type:"number",convert:function(b,a){var c;if(a.data instanceof ol.layer.Base){c=a.getOlLayer();return c.get("minResolution")}}},{name:"maxResolution",type:"number",convert:function(b,a){var c;if(a.data instanceof ol.layer.Base){c=a.getOlLayer();return c.get("maxResolution")}}}],proxy:{type:"memory",reader:{type:"json"}},getOlLayer:function(){if(this.data instanceof ol.layer.Base){return this.data}}});Ext.define("GeoExt.data.LayerStore",{extend:"Ext.data.Store",requires:["GeoExt.data.model.Layer"],model:"GeoExt.data.model.Layer",config:{map:null},constructor:function(a){var b=this;b.callParent([a]);if(a.map){this.bindMap(a.map)}},bindMap:function(c){var b=this;if(!b.map){b.map=c}if(c instanceof ol.Map){var a=c.getLayers();a.forEach(function(d){b.loadRawData(d,true)});a.forEach(function(d){d.on("propertychange",b.onChangeLayer,b)});a.on("add",b.onAddLayer,b);a.on("remove",b.onRemoveLayer,b)}b.on({load:b.onLoad,clear:b.onClear,add:b.onAdd,remove:b.onRemove,update:b.onStoreUpdate,scope:b});b.data.on({replace:b.onReplace,scope:b});b.fireEvent("bind",b,c)},unbindMap:function(){var a=this;if(a.map&&a.map.getLayers()){a.map.getLayers().un("add",a.onAddLayer,a);a.map.getLayers().un("remove",a.onRemoveLayer,a)}a.un("load",a.onLoad,a);a.un("clear",a.onClear,a);a.un("add",a.onAdd,a);a.un("remove",a.onRemove,a);a.un("update",a.onStoreUpdate,a);a.data.un("replace",a.onReplace,a);a.map=null},onChangeLayer:function(b){var d=b.target;var c=this.findBy(function(e){return e.getOlLayer()===d});if(c>-1){var a=this.getAt(c);if(b.key==="title"){a.set("title",d.get("title"))}else{this.fireEvent("update",this,a,Ext.data.Record.EDIT)}}},onAddLayer:function(b){var d=b.element;var c=this.map.getLayers().getArray().indexOf(d);var e=this;d.on("propertychange",e.onChangeLayer,e);if(!e._adding){e._adding=true;var a=e.proxy.reader.read(d);e.insert(c,a.records);delete e._adding}},onRemoveLayer:function(a){var c=this;if(!c._removing){var b=a.element,d=c.getByLayer(b);if(d){c._removing=true;b.un("propertychange",c.onChangeLayer,c);c.remove(d);delete c._removing}}},onLoad:function(c,b,g){var e=this;if(g){if(!Ext.isArray(b)){b=[b]}if(!e._addRecords){e._removing=true;e.map.getLayers().forEach(function(h){h.un("propertychange",e.onChangeLayer,e)});e.map.getLayers().clear();delete e._removing}var a=b.length;if(a>0){var f=new Array(a);for(var d=0;d<a;d++){f[d]=b[d].getOlLayer();f[d].on("propertychange",e.onChangeLayer,e)}e._adding=true;e.map.getLayers().extend(f);delete e._adding}}delete e._addRecords},onClear:function(){var a=this;a._removing=true;a.map.getLayers().forEach(function(b){b.un("propertychange",a.onChangeLayer,a)});a.map.getLayers().clear();delete a._removing},onAdd:function(b,a,c){var g=this;if(!g._adding){g._adding=true;var e;for(var d=0,f=a.length;d<f;++d){e=a[d].getOlLayer();e.on("propertychange",g.onChangeLayer,g);if(c===0){g.map.getLayers().push(e)}else{g.map.getLayers().insertAt(c,e)}}delete g._adding}},onRemove:function(b,a){var d=this;if(!d._removing){var c=a.getOlLayer();c.un("propertychange",d.onChangeLayer,d);var e=false;d.map.getLayers().forEach(function(f){if(f===c){e=true}});if(e){d._removing=true;d.removeMapLayer(a);delete d._removing}}},onStoreUpdate:function(c,a,b){if(b===Ext.data.Record.EDIT){if(a.modified&&a.modified.title){var d=a.getOlLayer();var e=a.get("title");if(e!==d.get("title")){d.set("title",e)}}}},removeMapLayer:function(a){this.map.getLayers().remove(a.getOlLayer())},onReplace:function(b,a){this.removeMapLayer(a)},getByLayer:function(b){var a=this.findBy(function(c){return c.getOlLayer()===b});if(a>-1){return this.getAt(a)}},destroy:function(){this.unbind();this.callParent()},loadRecords:function(a,b){if(b&&b.addRecords){this._addRecords=true}this.callParent(arguments)},loadRawData:function(e,b){var d=this,a=d.proxy.reader.read(e),c=a.records;if(a.success){d.totalCount=a.total;d.loadRecords(c,b?d.addRecordsOptions:undefined);d.fireEvent("load",d,c,true)}}});Ext.define("GeoExt.component.Map",{extend:"Ext.Component",alias:["widget.gx_map","widget.gx_component_map"],requires:["GeoExt.data.LayerStore"],config:{map:null,pointerRest:false,pointerRestInterval:1000,pointerRestPixelTolerance:3},mapRendered:false,layerStore:null,lastPointerPixel:null,isMouseOverMapEl:null,initComponent:function(){var b=this;if(!(b.getMap() instanceof ol.Map)){var a=new ol.Map({view:new ol.View({center:[0,0],zoom:2})});b.setMap(a)}b.layerStore=Ext.create("GeoExt.data.LayerStore",{storeId:b.getId()+"-store",map:b.getMap()});b.on("resize",b.onResize,b);b.callParent()},onResize:function(){var a=this;if(!a.mapRendered){a.getMap().setTarget(a.getTargetEl().dom);a.mapRendered=true}else{a.getMap().updateSize()}},bufferedPointerMove:Ext.emptyFn,unbufferedPointerMove:function(f){var e=this;var c=e.getPointerRestPixelTolerance();var d=f.pixel;if(!e.isMouseOverMapEl){e.fireEvent("pointerrestout",f);return}if(e.lastPointerPixel){var b=Math.abs(e.lastPointerPixel[0]-d[0]);var a=Math.abs(e.lastPointerPixel[1]-d[1]);if(b>c||a>c){e.lastPointerPixel=d}else{e.fireEvent("pointerrest",f,e.lastPointerPixel);return}}else{e.lastPointerPixel=d}e.fireEvent("pointerrest",f,null)},registerPointerRestEvents:function(){var a=this;var b=a.getMap();if(a.bufferedPointerMove===Ext.emptyFn){a.bufferedPointerMove=Ext.Function.createBuffered(a.unbufferedPointerMove,a.getPointerRestInterval(),a)}b.on("pointermove",a.bufferedPointerMove);if(!a.rendered){a.on("afterrender",a.bindEnterLeaveListeners,a)}else{a.bindEnterLeaveListeners()}},bindEnterLeaveListeners:function(){var a=this;var b=a.getEl();if(b){b.on({mouseenter:a.onMouseEnter,mouseleave:a.onMouseLeave,scope:a})}},unbindEnterLeaveListeners:function(){var a=this;var b=a.getEl();if(b){b.un({mouseenter:a.onMouseEnter,mouseleave:a.onMouseLeave,scope:a})}},onMouseEnter:function(){this.isMouseOverMapEl=true},onMouseLeave:function(){this.isMouseOverMapEl=false},unregisterPointerRestEvents:function(){var a=this.getMap();this.unbindEnterLeaveListeners();if(a){a.un("pointermove",this.bufferedPointerMove)}},applyPointerRest:function(a){if(a){this.registerPointerRestEvents()}else{this.unregisterPointerRestEvents()}return a},getCenter:function(){return this.getMap().getView().getCenter()},setCenter:function(a){this.getMap().getView().setCenter(a)},getExtent:function(){return this.getView().calculateExtent(this.getMap().getSize())},setExtent:function(a){this.getView().fitExtent(a,this.getMap().getSize())},getLayers:function(){return this.getMap().getLayers()},addLayer:function(a){if(a instanceof ol.layer.Base){this.getMap().addLayer(a)}else{Ext.Error.raise("Can not add layer "+a+" cause it is not an instance of ol.layer.Base")}},removeLayer:function(a){if(a instanceof ol.layer.Base){if(Ext.Array.contains(this.getLayers().getArray(),a)){this.getMap().removeLayer(a)}}else{Ext.Error.raise("Can not add layer "+a+" cause it is not an instance of ol.layer.Base")}},getStore:function(){return this.layerStore},getView:function(){return this.getMap().getView()},setView:function(a){this.getMap().setView(a)}});Ext.define("GeoExt.component.OverviewMap",{extend:"Ext.Component",alias:["widget.gx_overview","widget.gx_overviewmap","widget.gx_component_overviewmap"],config:{anchorStyle:null,boxStyle:null,layers:[],magnification:5,map:null,parentMap:null,recenterOnClick:true,recenterDuration:500},statics:{rotateCoordsAroundCoords:function(e,b,d){var f=Math.cos(d);var c=Math.sin(d);var a=(f*(e[0]-b[0])-c*(e[1]-b[1])+b[0]);var g=(c*(e[0]-b[0])+f*(e[1]-b[1])+b[1]);return[a,g]},rotateGeomAroundCoords:function(c,f,b){var d=this;var a=[];var e;if(c instanceof ol.geom.Point){a.push(d.rotateCoordsAroundCoords(c.getCoordinates(),f,b));c.setCoordinates(a[0])}else{if(c instanceof ol.geom.Polygon){e=c.getCoordinates()[0];e.forEach(function(g){a.push(d.rotateCoordsAroundCoords(g,f,b))});c.setCoordinates([a])}}return c}},boxFeature:null,anchorFeature:null,extentLayer:null,mapRendered:false,constructor:function(){this.initOverviewFeatures();this.callParent(arguments)},initComponent:function(){var a=this;if(!a.getParentMap()){Ext.Error.raise("No parentMap defined for overviewMap")}else{if(!(a.getParentMap() instanceof ol.Map)){Ext.Error.raise("parentMap is not an instance of ol.Map")}}a.initOverviewMap();a.on("beforedestroy",a.onBeforeDestroy,a);a.on("resize",a.onResize,a);a.callParent()},initOverviewFeatures:function(){var a=this;a.boxFeature=new ol.Feature();a.anchorFeature=new ol.Feature();a.extentLayer=new ol.layer.Vector({source:new ol.source.Vector()})},initOverviewMap:function(){var d=this,e=d.getParentMap(),a;if(d.getLayers().length<1){a=d.getParentMap().getLayers();a.forEach(function(f){if(f instanceof ol.layer.Tile||f instanceof ol.layer.Image){d.getLayers().push(f)}})}d.getLayers().push(d.extentLayer);if(!d.getMap()){var c=e.getView();var b=new ol.Map({controls:new ol.Collection(),interactions:new ol.Collection(),view:new ol.View({center:c.getCenter(),zoom:c.getZoom(),projection:c.getProjection()})});d.setMap(b)}Ext.each(d.getLayers(),function(f){d.getMap().addLayer(f)});e.getView().on("propertychange",d.onParentViewPropChange,d);e.on("postrender",d.updateBox,d);d.setOverviewMapProperty("center");d.setOverviewMapProperty("resolution");d.extentLayer.getSource().addFeatures([d.boxFeature,d.anchorFeature])},onParentViewPropChange:function(a){if(a.key==="center"||a.key==="resolution"){this.setOverviewMapProperty(a.key)}},overviewMapClicked:function(b){var e=this;var f=e.getParentMap();var d=f.getView();var c=d.getCenter();var a=ol.animation.pan({duration:e.getRecenterDuration(),source:c});f.beforeRender(a);d.setCenter(b.coordinate)},updateBox:function(){var e=this,f=e.getParentMap().getView().calculateExtent(e.getParentMap().getSize()),d=e.getParentMap().getView().getRotation(),c=e.getParentMap().getView().getCenter(),b=ol.geom.Polygon.fromExtent(f);b=e.self.rotateGeomAroundCoords(b,c,d);e.boxFeature.setGeometry(b);var a=new ol.geom.Point(ol.extent.getTopLeft(f));a=e.self.rotateGeomAroundCoords(a,c,d);e.anchorFeature.setGeometry(a)},setOverviewMapProperty:function(b){var d=this,c=d.getParentMap().getView(),a=d.getMap().getView();if(b==="center"){a.set("center",c.getCenter())}if(b==="resolution"){a.set("resolution",d.getMagnification()*c.getResolution())}},applyRecenterOnClick:function(a){var b=this,c=b.getMap();if(!c){b.addListener("afterrender",function(){b.setRecenterOnClick(a)},b,{single:true});return}if(a){c.on("click",b.overviewMapClicked,b)}else{c.un("click",b.overviewMapClicked,b)}},onBeforeDestroy:function(){var b=this,d=b.getMap(),c=b.getParentMap(),a=c&&c.getView();if(d){d.un("click",b.overviewMapClicked,b)}if(c){c.un("postrender",b.updateBox,b);a.un("propertychange",b.onParentViewPropChange,b)}},onResize:function(){var a=this,c=a.getEl().dom,b=a.getMap();if(!a.mapRendered){b.setTarget(c);a.mapRendered=true}else{a.getMap().updateSize()}},applyAnchorStyle:function(a){this.anchorFeature.setStyle(a);return a},applyBoxStyle:function(a){this.boxFeature.setStyle(a);return a}});Ext.define("GeoExt.data.model.print.LayoutAttributes",{extend:"GeoExt.data.model.Base",fields:[{name:"name",type:"string"},{name:"type",type:"string"},{name:"clientInfo",type:"auto"}]});Ext.define("GeoExt.data.model.print.Layout",{extend:"GeoExt.data.model.Base",requires:["GeoExt.data.model.print.LayoutAttributes"],hasMany:[{name:"attributes",associationKey:"attributes",model:"print.LayoutAttributes"}],fields:[{name:"name",type:"string"}]});Ext.define("GeoExt.data.model.print.Capability",{extend:"GeoExt.data.model.Base",requires:["GeoExt.data.model.print.Layout"],hasMany:[{name:"layouts",associationKey:"layouts",model:"print.Layout"}],fields:[{name:"app",type:"string"},{name:"formats"}]});Ext.define("GeoExt.data.MapfishPrintProvider",{extend:"Ext.Base",mixins:["Ext.mixin.Observable"],requires:["GeoExt.data.model.print.Capability","Ext.data.JsonStore"],config:{capabilities:null,url:""},statics:{getSerializedLayers:function(b){var c=[];var a=[];if(b instanceof GeoExt.data.LayerStore){b.each(function(e){var d=e.getOlLayer();a.push(d)})}else{if(b instanceof ol.Collection){a=b.getArray()}else{a=b}}Ext.each(a,function(d){var e=d.getSource();var f={};if(e instanceof ol.source.TileWMS){f={baseURL:e.getUrls()[0],customParams:e.getParams(),layers:[e.getParams().LAYERS],opacity:d.getOpacity(),styles:[""],type:"WMS"};c.push(f)}else{if(e instanceof ol.source.ImageWMS){f={baseURL:e.getUrl(),customParams:e.getParams(),layers:[e.getParams().LAYERS],opacity:d.getOpacity(),styles:[""],type:"WMS"};c.push(f)}else{}}});return c},renderPrintExtent:function(l,c,g){var h=l.getWidth();var b=l.getHeight();var j=h/b;var k=0.6;var d=g.width/g.height;var i;var e;var a;var f;if(d>=j){i=h*k;e=i/d}else{e=b*k;i=e*d}a=l.getView().calculateExtent([i,e]);f=new ol.Feature(ol.geom.Polygon.fromExtent(a));c.getSource().addFeature(f);return f}},capabilityRec:null,constructor:function(a){this.mixins.observable.constructor.call(this,a);if(!a.capabilities&&!a.url){Ext.Error.raise("Print capabilities or Url required")}this.initConfig(a);this.fillCapabilityRec()},fillCapabilityRec:function(){var b;var a=this.getCapabilities();var c=this.getUrl();var d=function(){this.capabilityRec=b.getAt(0);this.fireEvent("ready",this)};if(a){b=Ext.create("Ext.data.JsonStore",{model:"GeoExt.data.model.print.Capability",listeners:{datachanged:d,scope:this}});b.loadRawData(a)}else{if(c){b=Ext.create("Ext.data.Store",{autoLoad:true,model:"GeoExt.data.model.print.Capability",proxy:{type:"jsonp",url:c,callbackKey:"jsonp"},listeners:{load:d,scope:this}})}}}});Ext.define("GeoExt.data.model.LayerTreeNode",{extend:"GeoExt.data.model.Layer",requires:["Ext.data.NodeInterface"],mixins:["Ext.mixin.Queryable"],fields:[{name:"leaf",type:"boolean",convert:function(b,a){var c=a.get("isLayerGroup");if(c===undefined||c){return false}else{return true}}}],proxy:{type:"memory",reader:{type:"json"}},constructor:function(){var a;this.callParent(arguments);a=this.getOlLayer();if(a instanceof ol.layer.Base){this.set("checked",a.get("visible"));a.on("change:visible",this.onLayerVisibleChange,this)}},onLayerVisibleChange:function(a){var b=a.target;if(!this.__updating){this.set("checked",b.get("visible"))}},set:function(a,b){this.callParent(arguments);if(a==="checked"){this.__updating=true;this.getOlLayer().set("visible",b);this.__updating=false}},getRefItems:function(){return this.childNodes},getRefOwner:function(){return this.parentNode}},function(){Ext.data.NodeInterface.decorate(this)});Ext.define("GeoExt.data.TreeStore",{extend:"Ext.data.TreeStore",model:"GeoExt.data.model.LayerTreeNode",config:{layerGroup:null,textProperty:"name"},showLayerGroupNode:false,proxy:{type:"memory",reader:{type:"json"}},constructor:function(){var a=this;a.callParent(arguments);a.on("nodebeforeexpand",a.handleNodeBeforeExpand,a);a.on("noderemove",a.handleNodeRemove,a)},addLayerNode:function(d,e){var c=this,b=e instanceof ol.layer.Base?e:e.data;if(b instanceof ol.layer.Group){b.getLayers().once("add",this.onLayerCollectionChanged,this);b.getLayers().once("remove",this.onLayerCollectionChanged,this);var a=d.appendChild(b);b.getLayers().forEach(function(f){c.addLayerNode(a,f)})}else{b.text=b.get(c.getTextProperty());d.appendChild(b)}},handleNodeBeforeExpand:function(b){var a=this;if(b.isRoot()){if(a.showLayerGroupNode){a.addLayerNode(b,a.layerGroup)}else{var c=a.layerGroup.getLayers();c.once("remove",a.onLayerCollectionChanged,a);c.once("add",a.onLayerCollectionChanged,a);c.forEach(function(d){a.addLayerNode(b,d)})}}},handleNodeRemove:function(a,c){var d=this;if(c.isRoot()){return}var b=c.getOlLayer();if(b instanceof ol.layer.Group){var e=b.getLayers();e.un("add",d.onLayerCollectionChanged,d);e.un("remove",d.onLayerCollectionChanged,d)}},onLayerCollectionChanged:function(){var a=this;a.getRootNode().removeAll();if(a.showLayerGroupNode){a.addLayerNode(a.getRootNode(),a.getLayerGroup())}else{var b=a.getLayerGroup().getLayers();b.once("remove",a.onLayerCollectionChanged,a);b.once("add",a.onLayerCollectionChanged,a);b.forEach(function(c){a.addLayerNode(a.getRootNode(),c)})}}});Ext.define("GeoExt.data.model.Object",{extend:"GeoExt.data.model.Base",statics:{getOlCLassRef:function(c){var b=ol,a;if(Ext.isString(c)){a=c.split(".");if(Ext.Array.indexOf(a,"ol")===0){a.shift()}Ext.Array.each(a,function(d){b=b[d]})}return b}},olClass:"ol.Object",olObject:null,proxy:{type:"memory",reader:"json"},constructor:function(b){var a=this,c=this.statics(),d=c.getOlCLassRef(this.olClass);b=b||{};if(!(b instanceof d)){b=new d(b)}a.olObject=b;a.callParent([this.olObject.getProperties()]);a.olObject.on("propertychange",a.onPropertychange,a)},onPropertychange:function(a){var c=a.target,b=a.key;if(!this.__updating){this.set(b,c.get(b))}},set:function(a,b){var c={};this.callParent(arguments);this.__updating=true;if(Ext.isString(a)){c[a]=b}else{c=a}Ext.Object.each(c,function(e,d){this.olObject.set(e,d)},this);this.__updating=false},destroy:function(){this.olObject.un("propertychange",this.onPropertychange,this);this.callParent(arguments)}});Ext.define("GeoExt.data.model.Feature",{extend:"GeoExt.data.model.Object",getFeature:function(){return this.olObject}});Ext.define("GeoExt.data.store.Collection",{extend:"Ext.data.Store",requires:["GeoExt.data.model.Object"],olCollection:null,model:"GeoExt.data.model.Object",proxy:{type:"memory",reader:"json"},listeners:{add:function(b,a,c){var e=b.olCollection,f=a.length,d;b.__updating=true;for(d=0;d<f;d++){e.insertAt(c+d,a[d].olObject)}b.__updating=false},remove:function(b,a,c){var e=b.olCollection,f=a.length,d;b.__updating=true;for(d=0;d<f;d++){e.removeAt(c)}b.__updating=false}},constructor:function(a){a=a||{};if(a.data instanceof ol.Collection){this.olCollection=a.data}else{this.olCollection=new ol.Collection(a.data||[])}delete a.data;a.data=this.olCollection.getArray();this.callParent([a]);this.olCollection.on("add",this.onOlCollectionAdd,this);this.olCollection.on("remove",this.onOlCollectionRemove,this)},onOlCollectionAdd:function(b){var d=b.target,c=b.element,a=Ext.Array.indexOf(d.getArray(),c);if(!this.__updating){this.insert(a,c)}},onOlCollectionRemove:function(b){var c=b.element,a=this.findBy(function(d){return d.olObject===c});if(a!==-1){if(!this.__updating){this.removeAt(a)}}},destroy:function(){this.olCollection.un("add",this.onCollectionAdd,this);this.olCollection.un("remove",this.onCollectionRemove,this);delete this.olCollection;this.callParent(arguments)}});Ext.define("GeoExt.data.store.Features",{extend:"GeoExt.data.store.Collection",requires:[],model:"GeoExt.data.model.Feature",config:{layer:null},map:null,createLayer:false,layerCreated:false,style:null,features:null,constructor:function(b){var c=this,a=b||{};if(c.style===null){c.style=new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#3399CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})})})}if(a.features){a.data=a.features}else{if(a.layer&&a.layer instanceof ol.layer.Vector){if(a.layer.getSource()){a.data=a.layer.getSource().getFeatures()}else{a.data=[]}}}c.callParent([a]);if(c.createLayer===true&&!c.layer){c.drawFeaturesOnMap()}},getFeatures:function(){return this.olCollection},destroy:function(){var a=this;if(a.map&&a.layerCreated===true){a.map.removeLayer(a.layer)}a.callParent(arguments)},drawFeaturesOnMap:function(){var a=this;a.source=new ol.source.Vector({features:a.getFeatures()});a.layer=new ol.layer.Vector({source:a.source,style:a.style});if(a.map){a.map.addLayer(a.layer)}a.layerCreated=true}});Ext.define("GeoExt.panel.Popup",{requires:[],extend:"Ext.panel.Panel",alias:["widget.gx_popup","widget.gx_panel_popup"],config:{overlay:null,map:null},overlayElement:null,overlayElementCreated:false,cls:"gx-popup",constructor:function(b){var c=this,a=b||{},d;if(!Ext.isDefined(a.map)){Ext.Error.raise("Required configuration 'map' not passed")}if(Ext.isDefined(a.renderTo)){d=Ext.get(a.renderTo).dom}else{d=Ext.dom.Helper.append(Ext.getBody(),"<div>");c.overlayElementCreated=true}a.renderTo=d;c.overlayElement=d;c.callParent([a])},initComponent:function(){var a=this;a.on({afterrender:a.setOverlayElement,beforedestroy:a.onBeforeDestroy,scope:a});a.callParent();a.setupOverlay()},setupOverlay:function(){var b=this;var a=new ol.Overlay({autoPan:true,autoPanAnimation:{duration:250}});b.getMap().addOverlay(a);a.on("change:position",b.doLayout,b);b.setOverlay(a)},setOverlayElement:function(){this.getOverlay().set("element",this.overlayElement)},position:function(b){var a=this;a.getOverlay().setPosition(b)},onBeforeDestroy:function(){var b=this;if(b.overlayElementCreated&&b.overlayElement){var a=b.overlayElement.parentNode;a.removeChild(b.overlayElement)}b.getOverlay().un("change:position",b.doLayout,b)}});Ext.define("GeoExt.tree.Panel",{extend:"Ext.tree.Panel",alias:["widget.gx_treepanel","widget.gx_tree_panel"],initComponent:function(){var a=this;a.callParent()}});