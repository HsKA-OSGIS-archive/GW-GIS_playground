Ext.define("Basepackage.plugin.Hover",{extend:"Ext.plugin.Abstract",alias:"plugin.hover",pluginId:"hover",inheritableStatics:{HOVER_OVERLAY_IDENTIFIER_KEY:"name",HOVER_OVERLAY_IDENTIFIER_VALUE:"featureinfooverlay"},config:{pointerRest:true,pointerRestInterval:300,pointerRestPixelTolerance:5,featureInfoEpsg:"EPSG:3857",hoverVectorLayerSource:null,hoverVectorLayer:null,hoverVectorLayerInteraction:null},currentHoverTarget:null,pendingRequest:null,init:function(b){var a=this;a.addHoverVectorLayerSource();a.addHoverVectorLayer();a.addHoverVectorLayerInteraction();a.setupMapEventListeners();this.setCmp(b);b.setPointerRest(this.getPointerRest());b.setPointerRestInterval(this.getPointerRestInterval());b.setPointerRestPixelTolerance(this.getPointerRestPixelTolerance());b.on("pointerrest",a.onPointerRest,a);b.on("pointerrestout",a.cleanupHoverArtifacts,a)},setupMapEventListeners:function(){var a=this;var c=a.getCmp();var b=c.getMap();b.on("change:layerGroup",a.cleanupHoverArtifacts,a)},addHoverVectorLayerInteraction:function(){var c=this;var e=c.getCmp();var d=e.getMap();if(!c.getHoverVectorLayerInteraction()){var b=new ol.interaction.Select({multi:true,style:c.clusterSelectStyleFunction,layers:[c.getHoverVectorLayer()]});var a=b.getFeatures();a.on("add",this.onFeatureClicked,this);d.addInteraction(b);c.setHoverVectorLayerInteraction(b)}},onFeatureClicked:function(d){var b=this;var c=b.getCmp();var a=d.target.getArray();c.fireEvent("hoverfeaturesclick",a)},addHoverVectorLayerSource:function(){var a=this;if(!a.getHoverVectorLayerSource()){a.setHoverVectorLayerSource(new ol.source.Vector())}},addHoverVectorLayer:function(){var a=this;var d=a.getCmp();var c=d.getMap();var e=a.getHoverVectorLayer();if(!e){e=new ol.layer.Vector({name:"hoverVectorLayer",source:a.getHoverVectorLayerSource(),visible:true});c.addLayer(e);a.setHoverVectorLayer(e)}var b=Basepackage.util.Layer.KEY_DISPLAY_IN_LAYERSWITCHER;e.set(b,false)},clearPendingRequests:function(){var a=this;if(a.pendingRequest){Ext.Ajax.abort(a.pendingRequest)}},requestAsynchronously:function(b,a){var c=this;c.pendingRequest=Ext.Ajax.request({url:b,callback:function(){c.pendingRequest=null},success:a,failure:function(d){Ext.log.error("Couldn't get FeatureInfo",d)}})},cleanupHoverArtifacts:function(){var b=this;var a=b.self.HOVER_OVERLAY_IDENTIFIER_KEY;var e=b.self.HOVER_OVERLAY_IDENTIFIER_VALUE;var d=b.getCmp();var c=d.getMap();b.clearPendingRequests();b.getHoverVectorLayerSource().clear();c.getOverlays().forEach(function(f){if(f.get(a)===e){c.removeOverlay(f)}})},onPointerRest:function(a){var d=this;var g=d.getCmp();var f=g.getMap();var c=f.getView();var b=a.pixel;var e=[];var h=[];d.cleanupHoverArtifacts();f.forEachLayerAtPixel(b,function(k){var n=k.getSource();var j=c.getResolution();var m=c.getProjection().getCode();var l=k.get("hoverable");if(l!==false){if(n instanceof ol.source.TileWMS){var i=n.getGetFeatureInfoUrl(a.coordinate,j,m,{INFO_FORMAT:"application/json"});d.requestAsynchronously(i,function(p){var o=(new ol.format.GeoJSON()).readFeatures(p.responseText);d.showHoverFeature(k,o);o[0].set("layer",k);e.push(k);h.push(o[0]);d.showHoverToolTip(a,e,h)})}else{if(n instanceof ol.source.Vector){f.forEachFeatureAtPixel(b,function(p){if(k.get("type")==="WFS"||k.get("type")==="WFSCluster"){var q=d.getHoverVectorLayer();q.setStyle(d.clusterHighlightStyleFunction)}var o=p.clone();o.set("layer",k);e.push(k);h.push(o);d.showHoverFeature(k,h);d.currentHoverTarget=p},d,function(o){return o===k})}}}},this,function(i){if(i.get("hoverable")||i.get("type")==="WFSCluster"){return true}else{return false}});d.showHoverToolTip(a,e,h)},showHoverFeature:function(a,b){var c=this;var e=c.getCmp();var d=e.getMap();Ext.each(b,function(f){var h=f.getGeometry();if(h){h.transform(c.getFeatureInfoEpsg(),d.getView().getProjection())}if(!Ext.Array.contains(c.getHoverVectorLayerSource().getFeatures(),f)){c.getHoverVectorLayerSource().addFeature(f)}})},showHoverToolTip:function(j,e,c){var g=this;var f=g.self.HOVER_OVERLAY_IDENTIFIER_KEY;var i=g.self.HOVER_OVERLAY_IDENTIFIER_VALUE;var k=g.getCmp();var b=k.getMap();var h=j.coordinate;if(e.length>0&&c.length>0){b.getOverlays().forEach(function(l){b.removeOverlay(l)});var a=Ext.dom.Helper.createDom("<div>");a.className="feature-hover-popup";a.innerHTML=this.getToolTipHtml(e,c);var d=new ol.Overlay({position:h,offset:[10,-30],element:a});d.set(f,i);b.addOverlay(d)}},getToolTipHtml:function(c,b){var a="";Ext.each(b,function(g){var f=g.get("layer");var e=f.get("hoverfield");if(!e){e="id"}a+="<b>"+f.get("name")+"</b>";if(g){if(f.get("type")==="WFSCluster"){var h=g.get("count");a+="<br />"+h+"<br />"}else{var d=g.get(e);a+="<br />"+d+"<br />"}}});return a},clusterHighlightStyleFunction:function(b){var c=b.get("count"),a=14,d=10;if(c&&c>10){a=25;d=14}else{if(c&&c<4){d=7;a=8}else{if(c){a=c*2;d=c*1.3}}}return[new ol.style.Style({fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.6)"}),image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.6)"}),stroke:new ol.style.Stroke({color:"gray"})}),text:new ol.style.Text({text:c>1?c.toString():"",font:"bold "+d*2+"px Arial",stroke:new ol.style.Stroke({color:"black",width:1}),fill:new ol.style.Fill({color:"white"})})})]},clusterSelectStyleFunction:function(b){var c=b.get("count"),a=14,d=10;if(c&&c>10){a=25;d=14}else{if(c&&c<4){d=7;a=8}else{if(c){a=c*2;d=c*1.3}}}return[new ol.style.Style({fill:new ol.style.Fill({color:"rgba(0, 0, 255, 0.6)"}),image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"rgba(0, 0, 255, 0.6)"}),stroke:new ol.style.Stroke({color:"gray"})}),text:new ol.style.Text({text:c>1?c.toString():"",font:"bold "+d*2+"px Arial",stroke:new ol.style.Stroke({color:"black",width:1}),fill:new ol.style.Fill({color:"white"})})})]},hoverClusterFeatures:function(a){var d=this;var g=d.getCmp();var f=g.getMap();var c=g.getPlugin("wmshover");var b=f.forEachFeatureAtPixel(a,function(i){return i});if(b===d.highlightFeature||!b){c.cleanupHoverArtifacts();return}else{var e=c.getHoverVectorLayer();e.setStyle(d.clusterHighlightStyleFunction);var h=c.getHoverVectorLayerSource();c.cleanupHoverArtifacts();h.addFeature(b);d.highLightedFeature=b}}});Ext.define("Basepackage.plugin.WfsCluster",{extend:"Ext.plugin.Abstract",alias:"plugin.wfscluster",pluginId:"wfscluster",init:function(b){var a=this;this.setCmp(b);a.setUpClusterLayers(this.getCmp())},setUpClusterLayers:function(e){var c=this;var d=e.getMap();var b=Basepackage.util.Layer.getAllLayers(d);var a=[];Ext.each(b,function(f){if(f.get("type")==="WFSCluster"){if(!f.visibilityListener){f.on("change:visible",function(g){if(g.target.getVisible()){c.loadClusterFeatures(f)}})}a.push(f);if(f.get("olStyle")){f.setStyle(f.get("olStyle"))}else{f.setStyle(c.clusterStyleFuntion)}}});if(a.length>0){d.on("moveend",function(){c.loadClusterFeatures(a)},c)}},clusterStyleFuntion:function(d){var b;if(d.getId()){b=d.getId().split(".")[0]}else{b=d.get("layerName")}var c=Basepackage.util.Layer.getLayerByName(b);var e=d.get("count"),a,f;if(e>10){a=25;f=14}else{if(e<4){f=7;a=8}else{a=e*2;f=e*1.3}}return[new ol.style.Style({image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:c.get("clusterColorString")}),stroke:new ol.style.Stroke({color:"gray"})}),text:new ol.style.Text({text:e>1?e.toString():"",font:"bold "+f*2+"px Arial",stroke:new ol.style.Stroke({color:"black",width:1}),fill:new ol.style.Fill({color:"white"})})})]},loadClusterFeatures:function(a){var e=this;var g=e.getCmp();var f=g.getMap();if(f&&f.getView()&&f.getView().getResolution()&&f.getSize()){var c=f.getView().getResolution();var d=f.getView().calculateExtent(f.getSize());var b=Math.round(c*70);if(b<250){b=1}Ext.each(a,function(h){if(h.getVisible()){var i=h.get("featureType");Ext.Ajax.request({url:"../../geoserver.action?service=WFS&version=1.0.0&request=GetFeature&typeName="+i+"&outputFormat=application/json&bbox="+d.join(",")+"&viewParams=resolutioninm:"+b+";bboxllx:"+d[0]+";bboxlly:"+d[1]+";bboxurx:"+d[2]+";bboxury:"+d[3],success:function(j){var k=j.responseText;var l=new ol.format.GeoJSON().readFeatures(k);h.getSource().clear();h.getSource().addFeatures(l)},failure:function(){Ext.log.error("Failure on load of cluster features")}})}})}}});Ext.define("Basepackage.util.Animate",{statics:{shake:function(b,d,c){d=d||200;c=c||5;var a=b.getX();b.animate({duration:d,keyframes:{0:{x:a+c},25:{x:a-c},50:{x:a+c},75:{x:a-c},100:{x:a}}})},flashFeature:function(b,e){var d=Ext.ComponentQuery.query("gx_map")[0].getMap();var f=new Date().getTime();var c;function a(g){var l=g.vectorContext;var n=g.frameState;var m=b.getGeometry().clone();var o=n.time-f;var i=o/e;var k=ol.easing.easeOut(i)*25+5;var j=ol.easing.easeOut(1-i);var h=new ol.style.Circle({radius:k,snapToPixel:false,stroke:new ol.style.Stroke({color:"rgba(255, 0, 0, "+j+")",width:4,opacity:j})});l.setImageStyle(h);l.drawPointGeometry(m,null);if(o>e){ol.Observable.unByKey(c);return}n.animate=true}c=d.on("postcompose",a);return c}}});Ext.define("Basepackage.util.Layer",{statics:{KEY_DISPLAY_IN_LAYERSWITCHER:"bp_displayInLayerSwitcher",getLayerByName:function(c,f){var b=this,a,e;if(!Ext.isEmpty(f)){e=f.getArray?f.getArray():f}else{var d=Ext.ComponentQuery.query("gx_map")[0].getMap();e=d.getLayers().getArray()}Ext.each(e,function(g){if(a){return false}if(g.get("name")===c&&g instanceof ol.layer.Base){a=g;return false}else{if(g instanceof ol.layer.Group){a=b.getLayerByName(c,g.getLayers())}}});return a},getLayerByFeatureType:function(b,f){var c=this,a,e;if(!Ext.isEmpty(f)){e=f.getArray?f.getArray():f}else{var d=Ext.ComponentQuery.query("gx_map")[0].getMap();e=d.getLayers().getArray()}Ext.each(e,function(g){if(a){return false}if(g.get("featureType")&&g.get("featureType")===b){a=g;return false}else{if(g.getSource&&g.getSource().getParams&&g.getSource().getParams().LAYERS===b&&g instanceof ol.layer.Base){a=g;return false}else{if(g instanceof ol.layer.Group){a=c.getLayerByFeatureType(b,g.getLayers())}}}});return a},getAllLayers:function(d){var c=d.getLayers();var b=this;var a=[];c.forEach(function(e){if(e instanceof ol.layer.Group){Ext.each(b.getAllLayers(e),function(f){a.push(f)})}a.push(e)});return a},getVisibleLayers:function(d){var a=this;var b=a.getAllLayers(d);var c=[];Ext.each(b,function(e){if(e.get("visible")&&e.get("routingId")&&!e.get("isSliderLayer")){c.push(e)}});return c}}});Ext.define("Basepackage.util.Application",{requires:["Basepackage.util.Layer"],statics:{getAppContext:function(){var a=Ext.ComponentQuery.query("base-component-map")[0];if(a&&a.appContext){return a.appContext.data.merge}else{return null}},getRoute:function(){var f=Ext.ComponentQuery.query("base-component-map")[0];var e=f.getMap();var c=e.getView().getZoom();var b=e.getView().getCenter().toString();var g=Basepackage.util.Layer.getVisibleLayers(e);var a=[];Ext.each(g,function(h){a.push(h.get("routingId"))});var d="center/"+b+"|zoom/"+c+"|layers/"+a.toString();return d}}});Ext.define("Basepackage.util.ConfigParser",{autocreateLegends:false,activeRouting:false,statics:{layerArray:[],setupMap:function(b){var d=this,a;if(!b||!b.data||!b.data.merge||!b.data.merge.mapConfig){Ext.log.warn("Invalid context given to configParser!");return null}a=b.data.merge;if(window.location.hash.indexOf("center")>0){var c=location.hash.split("center/")[1].split("|")[0];a.startCenter=c}d.map=new ol.Map({controls:[new ol.control.ScaleLine()],view:new ol.View({center:this.convertStringToNumericArray("int",a.startCenter),zoom:a.startZoom||2,maxResolution:a.maxResolution,minResolution:a.minResolution,extent:d.convertStringToNumericArray("float",a.startBbox),projection:a.mapConfig.projection||"EPSG:3857",units:"m",resolutions:d.convertStringToNumericArray("float",a.mapConfig.resolutions)}),logo:false});d.getLayersArray(b);var e=new ol.layer.Group({layers:d.layerArray.reverse()});d.map.setLayerGroup(e);return d.map},createLayer:function(b){var d=this;var c="Image";var a="ImageWMS";if(b.type==="TileWMS"||b.type==="WMS"){c="Tile";a="TileWMS"}else{if(b.type==="XYZ"){c="Tile";a="XYZ"}else{if(b.type==="WFSCluster"||b.type==="WFS"){c="Vector";a="Vector"}else{if(b.type==="WMTS"){c="WMTS";a="WMTS"}}}}var e=d.getSourceForType(b,a);return d.getLayerForType(b,c,e)},getSourceForType:function(d,l){var j=this;var c=j.map;var h=c.getView().getProjection();var a=c.getView().getProjection().getCode();var g;var b=d.attribution?[new ol.Attribution({html:d.attribution})]:undefined;if(l==="Vector"){if(d.type==="WFSCluster"){g={attributions:b}}else{g={attributions:b,loader:function(p){var s=this;var r={};var q=Ext.apply({service:"WFS",version:"1.1.0",request:"GetFeature",outputFormat:"application/json",typeName:d.layers,srsname:a,bbox:p.join(",")+","+a},r||{});Ext.Ajax.request({url:d.url,method:"GET",params:q,success:function(t){var v=new ol.format.GeoJSON();var u=v.readFeatures(t.responseText);s.addFeatures(u)},failure:function(t){Ext.log.info("server-side failure with status code "+t.status)}})},strategy:ol.loadingstrategy.tile(ol.tilegrid.createXYZ({maxZoom:28}))}}}else{if(l==="TileWMS"||l==="WMS"||l==="ImageWMS"||l==="XYZ"){g={url:d.url,attributions:b,params:{LAYERS:d.layers,TRANSPARENT:d.transparent||false,VERSION:d.version||"1.1.1"}};if((d.type==="TileWMS"||d.type==="WMS"||d.type==="XYZ")&&d.tiled){g.params.TILED=true}}else{if(l==="WMTS"){var o;var m=ol.extent.getTopLeft(h.getExtent());var k=h.getExtent();var n=ol.extent.getWidth(k)/256;var e=new Array(14);var f=new Array(14);for(var i=0;i<14;++i){e[i]=n/Math.pow(2,i);f[i]=i}o=new ol.tilegrid.WMTS({origin:m,resolutions:e,matrixIds:f});g={url:d.url,layer:d.layers,attributions:b,matrixSet:d.tilematrixset,format:d.format,projection:h,tileGrid:o,style:d.style}}}}return new ol.source[l](g)},getLayerForType:function(d,e,i){var c={name:d.name||"No Name given",legendUrl:d.legendUrl||(this.autocreateLegends?this.generateLegendUrl(d):null),legendHeight:d.legendHeight||null,minResolution:d.minResolution||undefined,maxResolution:d.maxResolution||undefined,opacity:d.opacity||1,visible:(d.visibility===false)?false:true,treeColor:d.treeColor,routingId:d.id||null,olStyle:d.olStyle||null,hoverable:d.hoverable||!!d.hoverField,hoverField:d.hoverField,topic:d.topic||d.hoverField||null,source:i,type:d.type,featureType:d.layers};if(d.type==="WFSCluster"){if(!d.clusterColorString){var h=Math.round(Math.random()*255,10).toString();var f=Math.round(Math.random()*255,10).toString();var a=Math.round(Math.random()*255,10).toString();c.clusterColorString="rgba("+h+","+f+","+a+",0.5)"}else{c.clusterColorString=d.clusterColorString}c.icon=d.icon}if(d.customParams){Ext.applyIf(c,d.customParams)}return new ol.layer[e](c)},createFolder:function(a){return new ol.layer.Group({name:a.name,visible:a.checked?a.checked:false})},getLayersArray:function(b){var c=this,a,d;if(!b||!b.data||!b.data.merge||!b.data.merge.mapLayers){Ext.log.warn("Invalid context given to configParser!");return}a=b.data.merge.mapLayers;d=Ext.decode(b.data.merge.layerTreeConfig);if(!Ext.isEmpty(d)){c.createLayersArrayFromShogunContext(d,a)}else{c.createLayersArray(a)}},createLayersArray:function(a,b){var c=this;Ext.each(a,function(e){if(e.type==="Folder"){var d=c.createFolder(e);if(b){b.getLayers().push(d)}else{c.layerArray.push(d)}if(e.layers&&e.layers.length>0){c.createLayersArray(e.layers,d)}}else{if(b){b.getLayers().push(c.createLayer(e))}else{c.layerArray.push(c.createLayer(e))}}},c)},createLayersArrayFromShogunContext:function(d,a,b){var c=this;Ext.each(d,function(g){if(g.parentId===null&&g.children){c.createLayersArrayFromShogunContext(g.children,a)}else{if(g.leaf===false){var f=c.createFolder(g);if(b){b.getLayers().push(f)}else{c.layerArray.push(f)}if(g.children&&g.children.length>0){c.createLayersArrayFromShogunContext(g.children.reverse(),a,f)}}else{var e=c.getNodeFromConfigById(g.mapLayerId,a);e.visibility=g.checked;e.expanded=g.expanded;if(b){b.getLayers().push(c.createLayer(e))}else{c.layerArray.push(c.createLayer(e))}}}},c)},getNodeFromConfigById:function(c,a){var b;Ext.each(a,function(d){if(d.id===c){b=d;return false}});return b},convertStringToNumericArray:function(c,b){if(Ext.isEmpty(b)||Ext.isEmpty(c)||Ext.isArray(b)){return b}var a=[];Ext.each(b.split(","),function(d){if(c==="int"){a.push(parseInt(d,10))}else{if(c==="float"){a.push(parseFloat(d,10))}}});return a},generateLegendUrl:function(b){var a=b.url;a+="?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetLegendGraphic&";a+="FORMAT=image%2Fpng&TRANSPARENT=TRUE&";a+="LAYER="+b.layers;return a}}});Ext.define("Basepackage.util.Controller",{statics:{borrowViewMethods:function(a,c){var b=c.prototype;Ext.each(a,function(d){if(!Ext.isDefined(b[d])){b[d]=function(){var e=this.getView();var f=e[d];if(f){f.apply(e,arguments)}}}})}}});var http=require("http");function onRequest(d,c){var b=d.url.split("/?url=")[1];var a=decodeURIComponent(b);http.get(a,function(e){c.setHeader("Access-Control-Allow-Origin","*");c.setHeader("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept");e.pipe(c,{end:true})}).on("error",function(f){console.log("Got error: "+f.message)})}http.createServer(onRequest).listen(3000);Ext.define("Basepackage.util.Url",{statics:{getParamValue:function(b,a){var c=new RegExp("[\\?&]"+(b+"")+"=([^&#]*)"),e=c.exec(a||window.location.href),d;if(e){d=decodeURIComponent(e[1])}return d},getCurrentAppUrl:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname+"?"},getWebProjectBaseUrl:function(){var a=window.location.protocol+"//"+window.location.host,b=window.location.pathname.match(/\/[A-Za-z\-]*\//)[0];return a+b},getProjectBaseUrl:function(){var a=window.location.protocol+"//"+window.location.host+"/";return a}}});Ext.define("Basepackage.ux.ContextSensitiveHelp",{statics:{helpUrl:"../help/index.html",existingHelpKeys:["base-button-help","base-button-zoomin","base-button-zoomout","base-button-zoomtoextent","base-button-togglelegend","base-overview-map-button","base-button-addwms","base-button-measure","base-button-coordinatetransform","base-button-permalink","base-combo-scale","base-button-hsi","base-overview-map-button","base-panel-layersetchooser","base-form-print","base-container-overpasssearch"],warnPopupBlockerTitle:"Warnung",warnPopupBlockerContent:"Bitte deaktivieren Sie etwaige Popup-Blocker,um die Hilfe anzuzeigen.",getCmpFromEl:function(a){var b=Ext.getCmp(a.id);if(!b){return this.getCmpFromEl(a.parentNode)}else{return b}},getComponentFromPoint:function(a){var b=document.elementFromPoint(a.x,a.y);var c=this.getCmpFromEl(b);return c},bubbleToExistingHelp:function(d){var a=Basepackage.ux.ContextSensitiveHelp,c=a.existingHelpKeys,g,e,b=Ext.Array.contains(c,d.getXType()),f=Ext.Array.contains(c,d.helpKey);if(b||f){g=f?d.helpKey:d.getXType()}else{e=d.up();if(e){g=a.bubbleToExistingHelp(e)}}return g},displayHelpForCoordinates:function(c){var b=Basepackage.ux.ContextSensitiveHelp,e=b.getComponentFromPoint(c),d=b.bubbleToExistingHelp(e),a=b.helpUrl,f;if(d){a+="#"+d}f=window.open(a,"ContextSensitiveHelp","width=800,height=550,scrollbars=yes,left=200,top=150,resizable=yes,location=yes,menubar=no,status=no,dependent=yes");if(f){f.focus()}else{Ext.Msg.alert(b.warnPopupBlockerTitle,b.warnPopupBlockerContent)}return true}},setContextHelp:function(d){var c=this,a=Ext.getBody().getSize();var b=document.createElement("div");var e=Ext.get(b);if(d){Ext.Array.push(Basepackage.ux.ContextSensitiveHelp.existingHelpKeys,d)}document.body.insertBefore(b,document.body.firstChild);e.setSize(a);e.setStyle({cursor:"help",position:"absolute"});e.setZIndex(20000);e.on("click",function(g){var f=Ext.util.Point.fromEvent(g);c.helpLayer.destroy();Basepackage.ux.ContextSensitiveHelp.displayHelpForCoordinates(f);c.destroy()});e.show();c.helpLayer=e}});Ext.define("Basepackage.ux.RowExpanderWithComponents",{extend:"Ext.grid.plugin.RowExpander",alias:"plugin.rowexpanderwithcomponents",rowBodyTpl:new Ext.XTemplate('<div id="display-row-{id}"> </div>'),rowBodyCompTemplate:null,expandOnClick:false,hideExpandColumn:false,enableTextSelection:true,preventRecursionArray:[],init:function(b){var c=this,a;c.callParent(arguments);a=c.view=b.getView();b.addCls("rowexpanderwithcomponents");if(c.hideExpandColumn){b.headerCt.query("gridcolumn")[0].hidden=true}if(c.enableTextSelection){a.enableTextSelection=true}a.on("expandbody",function(i,e){var j=e.getId();if(!j){Ext.Error.raise("Error: Records must have an id to use therowExpanderWithComponents plugin. Use http://docs.sencha.com/extjs/4.2.2/#!/api/Ext.data.Model-cfg-idProperty or http://docs.sencha.com/extjs/4.2.2/#!/api/Ext.data.Model-cfg-idgen")}var k="display-row-"+j,g=Ext.clone(c.rowBodyCompTemplate);if(Ext.get(k).dom.children.length===0){var h=Ext.create(Ext.container.Container,{height:"100%",width:"100%",itemId:b.getId()+"-parentRowExpCont-"+j,items:[c.replaceObjValues(g,e)]});h.render(k);var f=h.getEl().parent(".x-grid-rowbody");f.swallowEvent(["mouseenter","click","mouseover","mousedown","dblclick","cellclick","itemmouseenter","itemmouseleave","onRowFocus","mouseleave"]);var d=h.getEl().parent(".x-grid-rowbody-tr");d.addCls(b.getCssForRow(e))}});a.getRowComponent=c.getRowComponent;b.getRowComponent=c.getRowComponent;b.addToRowComponent=c.addToRowComponent;b.addToRowComponent=c.addToRowComponent},getRowComponent:function(a){return Ext.ComponentQuery.query("#"+this.up("treepanel").getId()+"-parentRowExpCont-"+a)[0]},removeAllFromRowComponent:function(b){var a=this.getRowComponent(b);a.removeAll()},addToRowComponent:function(c,b){var a=this.getRowComponent(c);a.add(b)},bindView:function(a){if(this.expandOnClick){a.on("itemclick",this.onItemClick,this)}this.callParent(arguments)},onItemClick:function(b,a,d,c){this.toggleRow(c,a)},replaceObjValues:function(obj,record){for(var all in obj){if(typeof obj[all]==="string"&&obj[all].match(/{{(.*)}}/)){obj[all]=eval(obj[all].match(/{{(.*)}}/)[1])}if(typeof obj[all]==="object"&&obj[all]!==null){if(Ext.Array.contains(this.preventRecursionArray,obj[all])){return obj}else{this.preventRecursionArray.push(obj[all]);this.replaceObjValues(obj[all],record)}}if(obj.xtype){obj.layerRec=record;if(record.getOlLayer()&&record.getOlLayer().get("type")&&record.getOlLayer().get("type")!=="WFSCluster"&&Ext.isArray(obj.items)&&obj.items.length>1){obj.items.pop()}}}return obj}});Ext.define("Basepackage.view.form.AddWms",{extend:"Ext.form.Panel",xtype:"base-form-addwms",requires:["Ext.button.Button"],viewModel:{data:{errorIncompatibleWMS:"Der angefragte WMS ist nicht kompatibel zur Anwendung",errorRequestFailedS:"Die angegebene URL konte nicht abgefragt werden",errorCouldntParseResponse:"Die erhaltene Antwort konnte nicht erfolgreich geparst werden",addCheckedLayers:"Ausgewählte Layer hinzufügen"}},padding:5,layout:"anchor",defaults:{anchor:"100%"},scrollable:true,items:[{xtype:"fieldset",layout:"anchor",defaults:{anchor:"100%"},title:"Anfrageparameter",items:[{xtype:"textfield",fieldLabel:"WMS-URL",name:"url",allowBlank:false,value:"http://ows.terrestris.de/osm/service"},{xtype:"fieldcontainer",fieldLabel:"Version",defaultType:"radiofield",defaults:{flex:1},layout:"hbox",items:[{boxLabel:"v1.1.1",name:"version",inputValue:"1.1.1",id:"v111-radio"},{boxLabel:"v1.3.0",name:"version",inputValue:"1.3.0",id:"v130-radio",checked:true}]},{xtype:"hiddenfield",name:"request",value:"GetCapabilities"},{xtype:"hiddenfield",name:"service",value:"WMS"}]},{xtype:"fieldset",name:"fs-available-layers",layout:"anchor",defaults:{anchor:"100%"},title:"Verfügbare Layer"}],buttons:[{text:"Zurücksetzen",handler:function(b){var a=b.up("base-form-addwms");a.getForm().reset();a.emptyAvailableLayersFieldset()}},"->",{text:"Verfügbare Layer abfragen",formBind:true,disabled:true,handler:function(e){var a=e.up("base-form-addwms");var d=a.getViewModel();var f=a.getForm();if(f.isValid()){a.emptyAvailableLayersFieldset();var b=f.getValues();var c=b.url;delete b.url;Ext.Ajax.request({url:c,method:"GET",params:b,success:function(i){var k=new ol.format.WMSCapabilities();var g;try{g=k.read(i.responseText)}catch(j){a.showWarning(d.get("errorCouldntParseResponse"));return}var h=a.isCompatibleCapabilityResponse(g);if(!h){a.showWarning(d.get("errorIncompatibleWMS"));return}a.fillAvailableLayersFieldset(h)},failure:function(){a.showWarning(d.get("errorRequestFailedS"))}})}}}],emptyAvailableLayersFieldset:function(){var a=this.down('[name="fs-available-layers"]');a.removeAll()},showWarning:function(a){Ext.Msg.show({title:"Warnung",message:"Ein Fehler trat auf: "+a,width:300,buttons:Ext.Msg.OK,icon:Ext.Msg.WARNING})},isCompatibleCapabilityResponse:function(a){if(!a){return false}var b=a.version;if(b!=="1.1.1"&&b!=="1.3.0"){return false}var c=[];var g=Ext.ComponentQuery.query("gx_map")[0].getMap();var e=g.getView().getProjection().getCode();var f=a.Capability.Layer.Layer;var d=a.Capability.Request.GetMap.DCPType[0].HTTP.Get.OnlineResource;Ext.each(f,function(i){if(b==="1.3.0"&&!Ext.Array.contains(i.CRS,e)){return}var h=new ol.source.TileWMS({url:d,params:{LAYERS:i.Name,STYLES:i.Style[0].Name,VERSION:b}});var j=new ol.layer.Tile({topic:true,name:i.Title,source:h,legendUrl:i.Style[0].LegendURL[0].OnlineResource});c.push(j)});return c.length>0?c:false},fillAvailableLayersFieldset:function(d){this.emptyAvailableLayersFieldset();var b=this;var a=b.down('[name="fs-available-layers"]');var c=this.getViewModel();Ext.each(d,function(e){a.add({xtype:"checkbox",boxLabel:e.get("name"),checked:true,olLayer:e})});a.add({xtype:"button",text:c.get("addCheckedLayers"),margin:10,handler:this.addCheckedLayers,scope:this})},addCheckedLayers:function(){var a=this.down('[name="fs-available-layers"]');var b=a.query("checkbox[checked=true][disabled=false]");var c=Ext.ComponentQuery.query("gx_map")[0].getMap();Ext.each(b,function(d){c.addLayer(d.olLayer);d.setDisabled(true)})}});Ext.define("Basepackage.view.button.AddWms",{extend:"Ext.button.Button",xtype:"base-button-addwms",requires:["Ext.window.Window","Basepackage.view.form.AddWms","Basepackage.util.Animate"],bind:{text:"{text}",tooltip:"{tooltip}"},handler:function(){var a=Ext.ComponentQuery.query("[name=add-wms-window]")[0];if(!a){Ext.create("Ext.window.Window",{name:"add-wms-window",title:"WMS hinzufügen",width:500,height:400,layout:"fit",items:[{xtype:"base-form-addwms"}]}).show()}else{Basepackage.util.Animate.shake(a)}},viewModel:{data:{tooltip:"WMS hinzufügen\u2026",text:'WMS <span style="font-size: 1.7em; font-weight: normal;">⊕</span>'}}});Ext.define("Basepackage.view.form.CoordinateTransform",{extend:"Ext.form.Panel",xtype:"base-form-coordinatetransform",requires:["Ext.button.Button"],viewModel:{data:{}},padding:5,layout:"anchor",defaults:{anchor:"100%"},scrollable:true,config:{coordinateSystemsToUse:[],transformCenterOnRender:true},initComponent:function(){var b=this,a=[],c=Ext.ComponentQuery.query("base-component-map")[0].getMap();if(Ext.isEmpty(b.getCoordinateSystemsToUse())){Ext.log.warn("No coordinatesystems given to Component");return}Ext.each(b.getCoordinateSystemsToUse(),function(e){var f=ol.proj.get(e.code);if(!Ext.isDefined(f)){Ext.log.warn("The CRS "+e.code+" is not defined, did you require it?");return}var d={xtype:"fieldset",title:e.name,crs:e.code,margin:5,items:[{xtype:"numberfield",name:"xcoord",decimalSeparator:",",decimalPrecision:7,fieldLabel:"X-Koordinate",value:"",hideTrigger:true,keyNavEnabled:false,mouseWheelEnabled:false,listeners:{focus:b.toggleBtnVisibility}},{xtype:"container",layout:"hbox",margin:"0 0 5 0",items:[{xtype:"numberfield",name:"ycoord",decimalSeparator:",",decimalPrecision:7,fieldLabel:"Y-Koordinate",value:"",hideTrigger:true,keyNavEnabled:false,mouseWheelEnabled:false,listeners:{focus:b.toggleBtnVisibility}},{xtype:"button",name:"transform",margin:"0 0 0 30",width:110,text:"Transformieren",hidden:true,handler:b.transform}]}]};a.push(d)});b.items=[{xtype:"fieldset",layout:"anchor",defaults:{anchor:"100%"},title:"Koordinaten",items:a}];b.callParent();b.on("afterrender",function(){var e=Basepackage.util.Layer.getLayerByName("transformvectorlayer");if(e){e.setVisible(true)}if(b.getTransformCenterOnRender()){var d=c.getView().getCenter();b.transform(d)}});c.on("click",b.transform);b.on("beforedestroy",function(){var d=Basepackage.util.Layer.getLayerByName("transformvectorlayer");d.getSource().clear();c.un("click",b.transform)})},buttons:[{text:"Zurücksetzen",handler:function(b){var a=b.up("base-form-coordinatetransform");a.reset();var c=Basepackage.util.Layer.getLayerByName("transformvectorlayer");c.getSource().clear()}}],toggleBtnVisibility:function(b){var a=Ext.ComponentQuery.query("base-form-coordinatetransform button[name=transform]"),c=b.up("fieldset").down("button[name=transform]");Ext.each(a,function(d){d.setVisible(false)});c.setVisible(true)},transformCoords:function(c,b,d){var a=ol.proj.transform(c,b,d);if(d.getUnits()==="m"){a[0]=Math.round(a[0]*100)/100;a[1]=Math.round(a[1]*100)/100}else{a[0]=Math.round(a[0]*10000000)/10000000;a[1]=Math.round(a[1]*10000000)/10000000}return a},transform:function(c){var f=Ext.ComponentQuery.query("base-form-coordinatetransform")[0],a=Ext.ComponentQuery.query("base-component-map")[0].getMap(),b=a.getView().getProjection(),d=f.query("fieldset"),m=Basepackage.util.Layer.getLayerByName("transformvectorlayer"),n=c instanceof ol.MapBrowserPointerEvent,e=Ext.isArray(c)&&c.length===2,g=[],j=b,i;if(n){g=c.coordinate}else{if(e){g=c}else{var k=c.up("fieldset");g[0]=k.down("numberfield[name=xcoord]").getValue();g[1]=k.down("numberfield[name=ycoord]").getValue();j=ol.proj.get(k.crs)}}Ext.each(d,function(o){if(!Ext.isEmpty(o.crs)){if(j){i=f.transformCoords(g,j,ol.proj.get(o.crs))}else{i=f.transformCoords(g,b,ol.proj.get(o.crs))}o.down("numberfield[name=xcoord]").setValue(i[0]);o.down("numberfield[name=ycoord]").setValue(i[1])}});if(!Ext.isDefined(m)){m=new ol.layer.Vector({name:"transformvectorlayer",source:new ol.source.Vector(),style:new ol.style.Style({image:new ol.style.Circle({radius:8,fill:new ol.style.Fill({color:"rgba(255, 0, 0, 0.7)"}),stroke:new ol.style.Stroke({color:"rgba(255, 0, 0, 0.7)"})})})});a.addLayer(m)}var h=ol.proj.transform(g,j,b);var l=new ol.Feature({geometry:new ol.geom.Point(h)});m.getSource().clear();m.getSource().addFeatures([l]);if(!n){a.getView().setCenter(h)}}});Ext.define("Basepackage.view.button.CoordinateTransform",{extend:"Ext.button.Button",xtype:"base-button-coordinatetransform",requires:["Ext.window.Window","Basepackage.view.form.CoordinateTransform","Basepackage.util.Animate"],bind:{text:"{text}",tooltip:"{tooltip}"},coordinateSystemsToUse:[],transformCenterOnRender:true,handler:function(){var a=Ext.ComponentQuery.query("[name=coordinate-transform-window]")[0];if(!a){Ext.create("Ext.window.Window",{name:"coordinate-transform-window",title:"Koordinaten transformieren",width:500,height:400,layout:"fit",items:[{xtype:"base-form-coordinatetransform",coordinateSystemsToUse:this.coordinateSystemsToUse,transformCenterOnRender:this.transformCenterOnRender}]}).showAt(0)}else{Basepackage.util.Animate.shake(a)}},viewModel:{data:{tooltip:"Koordinaten transformieren und anzeigen",text:"Koordinaten transformieren"}}});Ext.define("Basepackage.view.button.Help",{extend:"Ext.button.Button",xtype:"base-button-help",requires:["Basepackage.ux.ContextSensitiveHelp"],viewModel:{data:{tooltip:"Hilfe",text:null}},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf059@FontAwesome",config:{additonalHelpKeys:null},handler:function(b){var a=Ext.create("Basepackage.ux.ContextSensitiveHelp");a.setContextHelp(b.getAdditonalHelpKeys())}});Ext.define("Basepackage.view.button.Hsi",{extend:"Ext.button.Button",xtype:"base-button-hsi",viewModel:{data:{tooltip:"Informationsabfrage",text:null}},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf05a@FontAwesome",enableToggle:true,pressed:true,initComponent:function(){this.callParent([arguments]);this.setControlStatus(this.pressed)},toggleHandler:function(a){this.setControlStatus(a.pressed)},setControlStatus:function(a){var b=Ext.ComponentQuery.query("base-component-map")[0];b.setPointerRest(a)}});Ext.define("Basepackage.view.button.Measure",{extend:"Ext.button.Button",xtype:"base-button-measure",requires:["Basepackage.util.Layer"],viewModel:{data:{textline:"Strecke messen",textpoly:"Fläche messen"}},measureVectorLayer:null,drawAction:null,geodesic:true,measureType:"line",sketch:null,helpTooltipElement:null,helpTooltip:null,measureTooltipElement:null,measureTooltip:null,continuePolygonMsg:"Klicken zum Zeichnen der Fläche",continueLineMsg:"Klicken zum Zeichnen der Strecke",clickToDrawText:"Klicken zum Messen",allowOnlyOneDrawing:true,strokeColor:"rgba(255, 0, 0, 0.8)",fillColor:"rgba(255, 0, 0, 0.5)",decimalPlacesInToolTips:2,switchToKmOnLargeValues:true,showMeasureInfoOnClickedPoints:false,initComponent:function(){var d=this,e=new ol.source.Vector({features:new ol.Collection()}),c;d.map=Ext.ComponentQuery.query("gx_map")[0].getMap();c=Basepackage.util.Layer.getLayerByName("measurelayer");if(Ext.isEmpty(c)){d.measureVectorLayer=new ol.layer.Vector({name:"measurelayer",source:e,style:new ol.style.Style({fill:new ol.style.Fill({color:d.fillColor}),stroke:new ol.style.Stroke({color:d.strokeColor,width:2}),image:new ol.style.Circle({radius:7,fill:new ol.style.Fill({color:d.fillColor})})})});d.map.addLayer(d.measureVectorLayer)}else{d.measureVectorLayer=c}var a=Basepackage.util.Layer.KEY_DISPLAY_IN_LAYERSWITCHER;d.measureVectorLayer.set(a,false);var b=(d.measureType==="line"?"MultiLineString":"MultiPolygon");d.drawAction=new ol.interaction.Draw({name:"drawaction",source:e,type:b,style:new ol.style.Style({fill:new ol.style.Fill({color:d.fillColor}),stroke:new ol.style.Stroke({color:d.strokeColor,lineDash:[10,10],width:2}),image:new ol.style.Circle({radius:5,stroke:new ol.style.Stroke({color:d.strokeColor}),fill:new ol.style.Fill({color:d.fillColor})})})});d.drawAction.setActive(false);d.map.addInteraction(d.drawAction)},handler:function(){var a=this;a.on("toggle",function(b,c){if(c){a.drawAction.setActive(true);a.createMeasureTooltip();a.createHelpTooltip();a.drawAction.on("drawstart",a.drawStart,a);a.drawAction.on("drawend",a.drawEnd,a);a.map.on("pointermove",a.pointerMoveHandler,a)}else{a.cleanUp(a)}});a.toggle()},cleanUp:function(a){a.drawAction.setActive(false);a.drawAction.un("drawstart",a.drawStart,a);a.drawAction.un("drawend",a.drawEnd,a);a.map.un("pointermove",a.pointerMoveHandler,a);a.map.un("click",a.addMeasureStopToolTip,a);a.cleanUpToolTips();a.measureVectorLayer.getSource().clear()},cleanUpToolTips:function(){var a=this;a.helpTooltipElement=null;a.measureTooltipElement=null;Ext.each(Ext.DomQuery.select(".tooltip-static"),function(b){b.parentNode.removeChild(b)});Ext.each(a.map.getOverlays().getArray(),function(b){if(b===a.measureTooltip||b===a.helpTooltip){a.map.removeOverlay(b)}})},addMeasureStopToolTip:function(a){var c=this;if(!Ext.isEmpty(c.sketch)){var b=c.sketch.getGeometry(),e=c.measureType==="line"?c.formatLength(b):c.formatArea(b);if(parseInt(e,10)>0){var f=Ext.dom.Helper.createDom("<div>");f.className="tooltip tooltip-static";f.innerHTML=e;var d=new ol.Overlay({element:f,offset:[0,-15],positioning:"bottom-center"});c.map.addOverlay(d);d.setPosition(a.coordinate)}}},drawStart:function(a){var b=this;var c=b.measureVectorLayer.getSource();b.sketch=a.feature;if(b.showMeasureInfoOnClickedPoints&&b.measureType==="line"){b.map.on("click",b.addMeasureStopToolTip,b)}if(b.allowOnlyOneDrawing&&c.getFeatures().length>0){b.cleanUpToolTips();b.createMeasureTooltip();b.createHelpTooltip();b.measureVectorLayer.getSource().clear()}},drawEnd:function(a){var b=this;b.map.un("click",b.addMeasureStopToolTip,b);if(b.measureType==="polygon"){b.measureVectorLayer.getSource().addFeatures([a.feature])}if(b.showMeasureInfoOnClickedPoints&&b.measureType==="line"){b.measureTooltip=null;if(b.measureTooltipElement){b.measureTooltipElement.parentNode.removeChild(b.measureTooltipElement)}}else{b.measureTooltipElement.className="tooltip tooltip-static";b.measureTooltip.setOffset([0,-7])}b.sketch=null;b.measureTooltipElement=null;b.createMeasureTooltip()},pointerMoveHandler:function(a){var e=this;if(a.dragging){return}var d=e.clickToDrawText;var g=a.coordinate;var f=a.coordinate;if(e.sketch){var b;var c=(e.sketch.getGeometry());if(c instanceof ol.geom.Polygon){b=e.formatArea(c);d=e.continuePolygonMsg;g=c.getLastCoordinate();f=c.getInteriorPoint().getCoordinates()}else{if(c instanceof ol.geom.LineString){b=e.formatLength(c);d=e.continueLineMsg;g=c.getLastCoordinate();f=c.getLastCoordinate()}}e.measureTooltipElement.innerHTML=b;e.measureTooltip.setPosition(f)}e.helpTooltipElement.innerHTML=d;e.helpTooltip.setPosition(g)},createHelpTooltip:function(){var a=this;if(a.helpTooltipElement){a.helpTooltipElement.parentNode.removeChild(a.helpTooltipElement)}a.helpTooltipElement=Ext.dom.Helper.createDom("<div>");a.helpTooltipElement.className="tooltip";a.helpTooltip=new ol.Overlay({element:a.helpTooltipElement,offset:[15,0],positioning:"center-left"});a.map.addOverlay(a.helpTooltip)},createMeasureTooltip:function(){var a=this;if(a.measureTooltipElement){a.measureTooltipElement.parentNode.removeChild(a.measureTooltipElement)}a.measureTooltipElement=Ext.dom.Helper.createDom("<div>");a.measureTooltipElement.className="tooltip tooltip-measure";a.measureTooltip=new ol.Overlay({element:a.measureTooltipElement,offset:[0,-15],positioning:"bottom-center"});a.map.addOverlay(a.measureTooltip)},formatLength:function(m){var j=this,g=Math.pow(10,j.decimalPlacesInToolTips),a;if(j.geodesic){var h=new ol.Sphere(6378137);var k=m.getCoordinates();a=0;var d=j.map.getView().getProjection();for(var f=0,l=k.length-1;f<l;++f){var e=ol.proj.transform(k[f],d,"EPSG:4326");var c=ol.proj.transform(k[f+1],d,"EPSG:4326");a+=h.haversineDistance(e,c)}}else{a=Math.round(m.getLength()*100)/100}var b;if(j.switchToKmOnLargeValues&&a>1000){b=(Math.round(a/1000*g)/g)+" km"}else{b=(Math.round(a*g)/g)+" m"}return b},formatArea:function(h){var f=this,d=Math.pow(10,f.decimalPlacesInToolTips),a;if(f.geodesic){var e=new ol.Sphere(6378137);var c=f.map.getView().getProjection();var g=(h.clone().transform(c,"EPSG:4326"));var i=g.getLinearRing(0).getCoordinates();a=Math.abs(e.geodesicArea(i))}else{a=h.getArea()}var b;if(f.switchToKmOnLargeValues&&a>10000){b=(Math.round(a/1000000*d)/d)+" km<sup>2</sup>"}else{b=(Math.round(a*d)/d)+" m<sup>2</sup>"}return b}});Ext.define("Basepackage.view.form.Permalink",{extend:"Ext.form.Panel",xtype:"base-form-permalink",requires:["Ext.button.Button"],viewModel:{data:{permalink:"Permalink"}},padding:5,layout:"fit",minWidth:320,defaults:{anchor:"100%"},items:[{xtype:"textfield",name:"textfield-permalink",editable:false,listeners:{afterrender:function(a){var b=a.up("form").getPermalink();a.setValue(b)},change:function(b){var a=Ext.util.TextMetrics.measure(b.getEl(),b.getValue()).width;b.setWidth(a+20)}}}],buttons:[{text:"Erneuern",handler:function(a){var c=a.up("form").getPermalink();var b=a.up("form").down("textfield");b.setValue(c)}}],getPermalink:function(){var a=Basepackage.util.Application.getRoute();var b=window.location.origin+window.location.pathname+window.location.search;var c=b+"#"+a;return c}});Ext.define("Basepackage.view.button.Permalink",{extend:"Ext.button.Button",xtype:"base-button-permalink",requires:["Ext.window.Window","Basepackage.view.form.Permalink","Basepackage.util.Animate","Basepackage.util.Application"],bind:{text:"{text}",tooltip:"{tooltip}"},handler:function(){var a=Ext.ComponentQuery.query("[name=permalink-window]")[0];if(!a){Ext.create("Ext.window.Window",{name:"permalink-window",title:"Permalink",layout:"fit",items:[{xtype:"base-form-permalink"}]}).show()}else{Basepackage.util.Animate.shake(a)}},viewModel:{data:{tooltip:"Permalink",text:"Permalink"}}});Ext.define("Basepackage.view.button.ToggleLegend",{extend:"Ext.button.Button",xtype:"base-button-togglelegend",viewModel:{data:{tooltip:"Layerauswahl",text:null}},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf022@FontAwesome",handler:function(b){var a=b.up("base-panel-mapcontainer").down("base-panel-legendtree");if(a.getCollapsed()){a.expand()}else{a.collapse()}b.blur()}});Ext.define("Basepackage.view.button.ZoomIn",{extend:"Ext.button.Button",xtype:"base-button-zoomin",viewModel:{data:{tooltip:"Hineinzoomen",text:null}},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf00e@FontAwesome",handler:function(a){var b=a.up("base-panel-mapcontainer").down("gx_map").getMap();var d=a.up("base-panel-mapcontainer").down("gx_map").getView();var c=ol.animation.zoom({resolution:d.getResolution(),duration:500});b.beforeRender(c);d.setResolution(d.getResolution()/2)}});Ext.define("Basepackage.view.button.ZoomOut",{extend:"Ext.button.Button",xtype:"base-button-zoomout",viewModel:{data:{tooltip:"Herauszoomen",text:null}},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf010@FontAwesome",handler:function(a){var b=a.up("base-panel-mapcontainer").down("gx_map").getMap();var d=a.up("base-panel-mapcontainer").down("gx_map").getView();var c=ol.animation.zoom({resolution:d.getResolution(),duration:500});b.beforeRender(c);d.setResolution(d.getResolution()*2)}});Ext.define("Basepackage.view.button.ZoomToExtent",{extend:"Ext.button.Button",xtype:"base-button-zoomtoextent",requires:["Basepackage.util.Application"],viewModel:{data:{tooltip:"Auf Gesamtansicht zoomen",text:null}},config:{center:null,zoom:null,resolution:null},bind:{text:"{text}",tooltip:"{tooltip}"},glyph:"xf0b2@FontAwesome",initComponent:function(){this.callParent(arguments);if(this.getZoom()&&this.getResolution()){Ext.raise("Zoom and resolution set for Extent Button!Please choose one.")}this.setConfigValues()},setConfigValues:function(){var a=Basepackage.util.Application.getAppContext();if(a){if(!this.getCenter()){this.setCenter(a.startCenter)}if(!this.getZoom()&&!this.getResolution()){this.setZoom(a.startZoom)}}},handler:function(b){this.setConfigValues();var c=b.up("base-panel-mapcontainer").down("gx_map").getMap();var h=b.up("base-panel-mapcontainer").down("gx_map").getView();var a=this.getCenter();var e=this.getResolution();var f=this.getZoom();var g=ol.animation.pan({source:h.getCenter()});var d=ol.animation.zoom({resolution:h.getResolution()});c.beforeRender(g);c.beforeRender(d);h.setCenter(a);if(f){h.setZoom(f)}else{h.setResolution(e)}}});Ext.define("Basepackage.view.combo.ScaleCombo",{xtype:"base-combo-scale",extend:"Ext.form.field.ComboBox",requires:[],queryMode:"local",forceSelection:false,allowBlank:false,width:120,editable:false,displayField:"scale",valueField:"resolution",fields:["scale","resolution"],fieldLabel:"",map:null,config:{scales:[{scale:"1:2.000.000",resolution:560},{scale:"1:1.000.000",resolution:280},{scale:"1:500.000",resolution:140},{scale:"1:250.000",resolution:70},{scale:"1:100.000",resolution:28},{scale:"1:50.000",resolution:14},{scale:"1:25.000",resolution:7},{scale:"1:10.000",resolution:2.8},{scale:"1:5.000",resolution:1.4},{scale:"1:2.500",resolution:0.7},{scale:"1:1.000",resolution:0.28},{scale:"1:500",resolution:0.14}]},initComponent:function(){var b=this;if(!b.map){b.map=Ext.ComponentQuery.query("gx_map")[0].getMap()}var a=Ext.create("Ext.data.Store",{sorters:[{property:"resolution",direction:"DESC"}],data:b.getScales()});b.store=a;b.callParent([arguments]);b.setValue(b.map.getView().getResolution());b.on("select",function(c,d){b.map.getView().setResolution(d.get("resolution"))});b.map.getView().on("change:resolution",b.updateComboOnMapChange,b)},updateComboOnMapChange:function(a){var c=a.target.get(a.key),b=this.getStore(),d=false;d=(b.findExact("resolution",c)>=0)?true:false;if(d){this.setValue(c)}else{var e={scale:"1:"+Math.round(this.getCurrentScale(c)).toLocaleString(),resolution:c};b.add(e);this.setValue(c)}},getCurrentScale:function(c){var e=Ext.ComponentQuery.query("gx_map")[0].getMap(),b=e.getView().getProjection().getUnits(),d=25.4/0.28,a=ol.proj.METERS_PER_UNIT[b],f=c*a*39.37*d;return f}});Ext.define("Basepackage.view.component.Map",{extend:"GeoExt.component.Map",xtype:"base-component-map",requires:["Basepackage.util.ConfigParser","Basepackage.util.Layer"],inheritableStatics:{guess:function(){return Ext.ComponentQuery.query("base-component-map")[0]}},appContext:null,appContextPath:"resources/appContext.json",fallbackAppContext:{data:{merge:{startCenter:[1163261,6648489],startZoom:5,mapLayers:[{name:"OSM WMS",type:"TileWMS",url:"http://ows.terrestris.de/osm/service?",layers:"OSM-WMS",topic:false}],mapConfig:{projection:"EPSG:3857",resolutions:[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135],zoom:0}}}},defaultListenerScope:true,autocreateLegends:false,activeRouting:false,constructor:function(b){var d=this;if(!d.getMap()){var a=b&&b.appContextPath?b.appContextPath:d.appContextPath;Ext.Ajax.request({url:a,async:false,success:function(e){if(Ext.isString(e.responseText)){d.appContext=Ext.decode(e.responseText)}else{if(Ext.isObject(e.responseText)){d.appContext=e.responseText}else{Ext.log.error("Error! Could not parse appContext!")}}},failure:function(e){Ext.log.error("Error! No application context found, example loaded",e);d.appContext=d.fallbackAppContext}});Basepackage.util.ConfigParser.autocreateLegends=b.autocreateLegends;Basepackage.util.ConfigParser.activeRouting=b.activeRouting;var c=Basepackage.util.ConfigParser.setupMap(d.appContext);d.setMap(c)}d.addControls();d.callParent([b])},addControls:function(){var b=this.getMap();var a=new ol.control.Attribution({collapsible:false,logo:false});b.addControl(a)}});Ext.define("Basepackage.view.container.LayerSlider",{extend:"Ext.container.Container",xtype:"base-slider-layer",requires:["Ext.slider.Single"],sliderConfig:{flex:6,value:0,minValue:0,maxValue:100,useTips:false},width:250,layers:[],sliderTitles:[],topTitle:null,addOffState:true,initialActiveLayerIdx:0,cls:"layerSlider",initComponent:function(){var i=this,a=Ext.ComponentQuery.query("gx_map")[0].getMap(),d=i.addOffState?i.layerNames.length+1:i.layerNames.length,c=i.getLabelItems(),g=[];i.layers=[];if(Ext.isEmpty(i.layerNames)||i.layerNames.length<2){Ext.log.error("Not enough layers given to slider!")}else{Ext.each(i.layerNames,function(k){i.addLayerByName(a.getLayers().getArray(),k)})}if(i.layerNames.length!==i.layers.length){Ext.log.error("Could not detect all layers by name!")}i.config.colspan=d;var b=Ext.create("Ext.slider.Single",i.sliderConfig);if(!Ext.isEmpty(i.topTitle)){var e={xtype:"container",cls:"sliderTopTitle",html:i.topTitle};g.push(e)}var j={xtype:"container",layout:{type:"hbox",align:"stretch"},items:c};g.push(j);var f={xtype:"container",layout:{type:"hbox",align:"stretch"},items:[{xtype:"container",flex:1},b,{xtype:"container",flex:1}]};g.push(f);i.items=g;i.callParent();b.on("change",i.changeHandler);if(i.initialActiveLayerIdx>0){var h=b.maxValue/(i.addOffState?i.layers.length:i.layers.length-1)*i.initialActiveLayerIdx;b.setValue(h);b.fireEvent("change",b,h)}},getLabelItems:function(){var a=this,b=[];if(a.addOffState){b.push({xtype:"container",html:"Aus",flex:1,cls:"sliderLabel"})}Ext.each(a.sliderTitles,function(c){b.push({xtype:"container",html:c,flex:1,cls:"sliderLabel"})});return b},addLayerByName:function(c,b){var a=this;Ext.each(c,function(e,d){if(e.get("name")===b){if(!a.addOffState&&d===0){e.set("opacity",1);e.setVisible(true)}else{e.set("opacity",0);e.setVisible(false)}e.set("isSliderLayer",true);a.layers.push(e);return false}if(e instanceof ol.layer.Group){a.addLayerByName(e.getLayers().getArray(),b)}})},changeHandler:function(d,e){var c=this.up("base-slider-layer"),b=d.maxValue/(c.addOffState?c.layers.length:c.layers.length-1);if(e===d.maxValue){e=d.maxValue-1}var a=parseInt(e/b,10);Ext.each(c.layers,function(f){f.setVisible(false)});if(e>=b||!c.addOffState){e=e-b*a;if(!c.addOffState){c.layers[a].set("opacity",Math.abs(1-(e*c.layers.length/100)));c.layers[a+1].set("opacity",e*c.layers.length/100);c.layers[a].setVisible(true);c.layers[a+1].setVisible(true)}else{c.layers[a-1].set("opacity",Math.abs(1-(e*c.layers.length/100)));c.layers[a].set("opacity",e*c.layers.length/100);c.layers[a-1].setVisible(true);c.layers[a].setVisible(true)}}else{c.layers[a].set("opacity",e*c.layers.length/100);c.layers[a].setVisible(true)}}});Ext.define("Basepackage.view.container.NominatimSearch",{extend:"Ext.container.Container",xtype:"base-search-nominatim",requires:["GeoExt.data.store.Features","GeoExt.grid.column.Symbolizer","Basepackage.util.Animate"],config:{nominatimUrl:"http://nominatim.openstreetmap.org",format:"json",limit:100,viewboxlbrt:"-180,90,180,-90",minSearchTextChars:3,typeDelay:500,groupHeaderTpl:"{type}",searchResultFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#8B0000",width:4})}),searchResultHighlightFeatureStyleFn:function(a,b){return new ol.style.Style({image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"#EE0000"}),stroke:new ol.style.Stroke({color:"gray",width:3})}),text:b?new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})}):undefined})},searchResultSelectFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:8,fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#0099CC",width:6})}),clusterStyleFn:function(b,a){var c=this.clusterLayer.getSource().distance_/2;if(a>c){a=c}return[new ol.style.Style({image:new ol.style.Circle({radius:a,stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:"#3399CC"})}),text:new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})})})]},highLightFeatureOnHoverInGrid:true},layout:"fit",typeDelayTask:null,searchTerm:null,searchResultVectorLayer:null,clusterLayer:null,clusterResults:false,styleCache:[],initComponent:function(){var d=this,e=Ext.ComponentQuery.query("gx_map")[0].getMap();if(!d.searchResultVectorLayer){d.searchResultVectorLayer=new ol.layer.Vector({name:"nominatimsearchresult",source:new ol.source.Vector(),style:d.getSearchResultFeatureStyle(),visible:!d.clusterResults});e.addLayer(d.searchResultVectorLayer)}if(d.clusterResults&&!d.clusterLayer){var a=new ol.source.Cluster({distance:40,source:d.searchResultVectorLayer.getSource()});d.clusterLayer=new ol.layer.Vector({name:"nominatimclusterlayer",source:a,style:function(g){var f=g.get("features").length;var h=d.styleCache[f];if(!h){h=d.clusterStyleFn(f,f+10);d.styleCache[f]=h}return h}});e.addLayer(d.clusterLayer);d.searchResultVectorLayer.setStyle(d.clusterStyleFn("",8))}var c=Ext.create("GeoExt.data.store.Features",{map:e,layer:d.searchResultVectorLayer,groupField:"type"});d.items=[{xtype:"textfield",name:"nominatimSearchTerm",fieldLabel:"Suchbegriff",enableKeyEvents:true,listeners:{change:d.handleKeyDown}},{xtype:"grid",name:"nominatimsearchresultgrid",hidden:true,hideHeaders:true,title:"Suchergebnisse",store:c,columns:[{xtype:"gx_symbolizercolumn",flex:1},{dataIndex:"displayfield",flex:7,renderer:function(f){return'<span data-qtip="'+f+'">'+f+"</span>"}}],features:[{ftype:"grouping",groupHeaderTpl:d.getGroupHeaderTpl()}],width:200,height:300},{xtype:"button",text:"Zurücksetzen",margin:"10 0 0 0",handler:d.resetSearchGridAndText,scope:d}];d.callParent(arguments);d.on("nominatimResponse",d.showSearchResults);d.on("show",d.down("textfield").focus);var b=d.down("grid[name=nominatimsearchresultgrid]");if(d.getHighLightFeatureOnHoverInGrid()){b.on("itemmouseenter",d.highlightFeature,d);b.on("itemmouseleave",d.unhighlightFeature,d)}b.on("itemclick",d.highlightSelectedFeature,d)},handleKeyDown:function(b){var a=b.up("base-search-nominatim"),c=b.getValue();if(c.length<a.getMinSearchTextChars()){return}a.searchTerm=c;a.resetGrid();if(a.typeDelayTask){a.typeDelayTask.cancel()}a.typeDelayTask=new Ext.util.DelayedTask(function(){a.triggerSearch()});a.typeDelayTask.delay(a.getTypeDelay())},resetSearchGridAndText:function(){var a=this;a.down("textfield[name=nominatimSearchTerm]").setValue("");a.resetGrid()},resetGrid:function(){var a=this;a.searchResultVectorLayer.getSource().clear();a.down("grid[name=nominatimsearchresultgrid]").hide()},triggerSearch:function(){var c=this,b;var d={q:c.searchTerm,format:c.getFormat(),limit:c.getLimit(),viewboxlbrt:c.getViewboxlbrt(),bounded:1};var a=c.getNominatimUrl()+"?";Ext.iterate(d,function(f,e){a+=f+"="+e+"&"});c.setLoading(true);Ext.Ajax.request({url:a,success:function(e){c.setLoading(false);if(Ext.isString(e.responseText)){b=Ext.decode(e.responseText)}else{if(Ext.isObject(e.responseText)){b=e.responseText}else{Ext.log.error("Error! Could not parse nominatim response!")}}c.fireEvent("nominatimResponse",b)},failure:function(e){c.setLoading(false);Ext.log.error("Error on nominatim request:",e)}})},showSearchResults:function(c){var d=this,b=d.down("grid[name=nominatimsearchresultgrid]");if(c.length>0){b.show()}Ext.each(c,function(f){var g;Ext.iterate(f,function(i,h){if(h&&h.toString().toLowerCase().indexOf(d.searchTerm)>-1){g=h;return false}});var e=new ol.Feature({geometry:new ol.geom.Point(ol.proj.transform([parseFloat(f.lon),parseFloat(f.lat)],"EPSG:4326","EPSG:3857")),properties:f});if(!g){e.set("displayfield",f.display_name)}else{e.set("displayfield",g)}d.searchResultVectorLayer.getSource().addFeature(e)});var a=d.searchResultVectorLayer.getSource().getExtent();if(!Ext.Array.contains(a,Infinity)){d.zoomToExtent(a)}},zoomToExtent:function(b){var a=Ext.ComponentQuery.query("gx_map")[0].getMap();var e=a.getView();var d=ol.animation.pan({source:e.getCenter()});var c=ol.animation.zoom({resolution:e.getResolution()});a.beforeRender(d,c);e.fit(b,a.getSize())},updateRenderer:function(b,a){var c=Ext.getCmp(Ext.query("div[id^=gx_renderer",true,b)[0].id);var d=c.map.getLayers().getArray()[0].getSource();d.getFeatures()[0].setStyle(a)},highlightFeature:function(c,d,f){if(this.enterEventRec===d){return}var g=Ext.ComponentQuery.query("gx_map")[0].getMap();var e;var b;var h;this.enterEventRec=d;ol.Observable.unByKey(this.flashListenerKey);if(this.clusterResults){e=this.getClusterFeatureFromFeature(d.olObject);var a=this.clusterLayer.getStyle()(e,g.getView().getResolution())[0];b=a.getImage().getRadius();h=a.getText().getText()}else{e=d.olObject;b=5}if(c.getSelection()[0]!==d){e.setStyle(this.getSearchResultHighlightFeatureStyleFn()(b,h));this.updateRenderer(f,this.getSearchResultHighlightFeatureStyleFn()(8,h))}if(e){this.flashListenerKey=Basepackage.util.Animate.flashFeature(e,1000,b)}},unhighlightFeature:function(a,b,c){if(this.leaveEventRec===b){return}this.leaveEventRec=b;if(a.getSelection()[0]!==b){b.olObject.setStyle(this.getSearchResultFeatureStyle());if(this.clusterResults){this.updateRenderer(c,this.clusterStyleFn("",8))}else{this.updateRenderer(c,this.getSearchResultFeatureStyle())}}},highlightSelectedFeature:function(a,b,d){var c=a.getStore();c.each(function(f){f.olObject.setStyle(this.getSearchResultFeatureStyle());var e=a.getRowByRecord(f);if(this.clusterResults){this.updateRenderer(e,this.clusterStyleFn("",8))}else{this.updateRenderer(e,this.getSearchResultFeatureStyle())}},this);b.olObject.setStyle(this.getSearchResultSelectFeatureStyle());this.updateRenderer(d,this.getSearchResultSelectFeatureStyle());this.zoomToExtent(b.olObject.getGeometry())},getClusterFeatureFromFeature:function(a){var b=this;var d;var c=b.clusterLayer.getSource().getFeatures();Ext.each(c,function(e){if(!Ext.isEmpty(e.get("features"))){Ext.each(e.get("features"),function(g){if(g.getProperties().properties.osm_id&&a.getProperties().properties.osm_id&&g.getProperties().properties.osm_id===a.getProperties().properties.osm_id){d=e;return false}})}if(!Ext.isEmpty(d)){return false}});return d}});Ext.define("Basepackage.view.container.OverpassSearch",{extend:"Ext.container.Container",xtype:"base-container-overpasssearch",requires:["GeoExt.data.store.Features","GeoExt.grid.column.Symbolizer","Basepackage.util.Animate"],config:{overpassUrl:"http://overpass-api.de/api/interpreter",format:"json",limit:100,viewboxlbrt:"90,-180,-90,180",minSearchTextChars:3,typeDelay:500,groupHeaderTpl:"{type}",searchResultFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#8B0000",width:4})}),searchResultHighlightFeatureStyleFn:function(a,b){return new ol.style.Style({image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"#EE0000"}),stroke:new ol.style.Stroke({color:"gray",width:3})}),text:b?new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})}):undefined})},searchResultSelectFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:8,fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#0099CC",width:6})}),clusterStyleFn:function(b,a){var c=this.clusterLayer.getSource().distance_/2;if(a>c){a=c}return[new ol.style.Style({image:new ol.style.Circle({radius:a,stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:"#3399CC"})}),text:new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})})})]},highLightFeatureOnHoverInGrid:true},layout:"fit",typeDelayTask:null,searchTerm:null,searchResultVectorLayer:null,clusterLayer:null,clusterResults:false,styleCache:[],initComponent:function(){var d=this,e=Ext.ComponentQuery.query("gx_map")[0].getMap();if(!d.searchResultVectorLayer){d.searchResultVectorLayer=new ol.layer.Vector({name:"overpasssearchresult",source:new ol.source.Vector(),style:d.getSearchResultFeatureStyle(),visible:!d.clusterResults});e.addLayer(d.searchResultVectorLayer)}if(d.clusterResults&&!d.clusterLayer){var a=new ol.source.Cluster({distance:40,source:d.searchResultVectorLayer.getSource()});d.clusterLayer=new ol.layer.Vector({name:"overpassclusterlayer",source:a,style:function(g){var f=g.get("features").length;var h=d.styleCache[f];if(!h){h=d.clusterStyleFn(f,f+10);d.styleCache[f]=h}return h}});e.addLayer(d.clusterLayer);d.searchResultVectorLayer.setStyle(d.clusterStyleFn("",8))}var c=Ext.create("GeoExt.data.store.Features",{map:e,layer:d.searchResultVectorLayer,groupField:"type"});d.items=[{xtype:"textfield",name:"overpassSearchTerm",fieldLabel:"Suchbegriff",enableKeyEvents:true,listeners:{change:d.handleKeyDown}},{xtype:"grid",name:"overpasssearchresultgrid",hidden:true,hideHeaders:true,title:"Suchergebnisse",store:c,columns:[{xtype:"gx_symbolizercolumn",flex:1},{dataIndex:"displayfield",flex:7,renderer:function(f){return'<span data-qtip="'+f+'">'+f+"</span>"}}],features:[{ftype:"grouping",groupHeaderTpl:d.getGroupHeaderTpl()}],width:200,height:300},{xtype:"button",text:"Zurücksetzen",margin:"10 0 0 0",handler:d.resetSearchGridAndText,scope:d}];d.callParent(arguments);d.on("overpassResponse",d.showSearchResults);d.on("show",d.down("textfield").focus);var b=d.down("grid[name=overpasssearchresultgrid]");if(d.getHighLightFeatureOnHoverInGrid()){b.on("itemmouseenter",d.highlightFeature,d);b.on("itemmouseleave",d.unhighlightFeature,d)}b.on("itemclick",d.highlightSelectedFeature,d)},handleKeyDown:function(b){var a=b.up("base-container-overpasssearch"),c=b.getValue();if(c.length<a.getMinSearchTextChars()){return}a.searchTerm=c;a.resetGrid();if(a.typeDelayTask){a.typeDelayTask.cancel()}a.typeDelayTask=new Ext.util.DelayedTask(function(){a.triggerSearch()});a.typeDelayTask.delay(a.getTypeDelay())},resetSearchGridAndText:function(){var a=this;a.down("textfield[name=overpassSearchTerm]").setValue("");a.resetGrid()},resetGrid:function(){var a=this;a.searchResultVectorLayer.getSource().clear();a.down("grid[name=overpasssearchresultgrid]").hide()},triggerSearch:function(){var c=this,b;var d={data:"[out:"+c.getFormat()+'];node["name"~"'+c.searchTerm+'"]('+c.getViewboxlbrt()+");out "+c.getLimit()+" qt;"};var a=c.getOverpassUrl()+"?";Ext.iterate(d,function(f,e){a+=f+"="+encodeURIComponent(e)+"&"});c.setLoading(true);Ext.Ajax.request({url:a,success:function(e){c.setLoading(false);if(Ext.isString(e.responseText)){b=Ext.decode(e.responseText)}else{if(Ext.isObject(e.responseText)){b=e.responseText}else{Ext.log.error("Error! Could not parse overpass response!")}}c.fireEvent("overpassResponse",b)},failure:function(e){c.setLoading(false);Ext.log.error("Error on overpass request:",e)}})},showSearchResults:function(a){var e=this,c=e.down("grid[name=overpasssearchresultgrid]"),d=a.elements;if(d.length>0){c.show()}Ext.each(d,function(g){var f=new ol.Feature({geometry:new ol.geom.Point(ol.proj.transform([parseFloat(g.lon),parseFloat(g.lat)],"EPSG:4326","EPSG:3857")),properties:g});f.set("displayfield",g.tags.name);e.searchResultVectorLayer.getSource().addFeature(f)});var b=e.searchResultVectorLayer.getSource().getExtent();if(!Ext.Array.contains(b,Infinity)){e.zoomToExtent(b)}},zoomToExtent:function(b){var a=Ext.ComponentQuery.query("gx_map")[0].getMap();var e=a.getView();var d=ol.animation.pan({source:e.getCenter()});var c=ol.animation.zoom({resolution:e.getResolution()});a.beforeRender(d,c);e.fit(b,a.getSize())},updateRenderer:function(b,a){var c=Ext.getCmp(Ext.query("div[id^=gx_renderer",true,b)[0].id);var d=c.map.getLayers().getArray()[0].getSource();d.getFeatures()[0].setStyle(a)},highlightFeature:function(c,d,f){if(this.enterEventRec===d){return}var g=Ext.ComponentQuery.query("gx_map")[0].getMap();var e;var b;var h;this.enterEventRec=d;ol.Observable.unByKey(this.flashListenerKey);if(this.clusterResults){e=this.getClusterFeatureFromFeature(d.olObject);var a=this.clusterLayer.getStyle()(e,g.getView().getResolution())[0];b=a.getImage().getRadius();h=a.getText().getText()}else{e=d.olObject;b=5}if(c.getSelection()[0]!==d){e.setStyle(this.getSearchResultHighlightFeatureStyleFn()(b,h));this.updateRenderer(f,this.getSearchResultHighlightFeatureStyleFn()(8,h))}if(e){this.flashListenerKey=Basepackage.util.Animate.flashFeature(e,1000,b)}},unhighlightFeature:function(a,b,c){if(this.leaveEventRec===b){return}this.leaveEventRec=b;if(a.getSelection()[0]!==b){b.olObject.setStyle(this.getSearchResultFeatureStyle());if(this.clusterResults){this.updateRenderer(c,this.clusterStyleFn("",8))}else{this.updateRenderer(c,this.getSearchResultFeatureStyle())}}},highlightSelectedFeature:function(a,b,d){var c=a.getStore();c.each(function(f){f.olObject.setStyle(this.getSearchResultFeatureStyle());var e=a.getRowByRecord(f);if(this.clusterResults){this.updateRenderer(e,this.clusterStyleFn("",8))}else{this.updateRenderer(e,this.getSearchResultFeatureStyle())}},this);b.olObject.setStyle(this.getSearchResultSelectFeatureStyle());this.updateRenderer(d,this.getSearchResultSelectFeatureStyle());this.zoomToExtent(b.olObject.getGeometry())},getClusterFeatureFromFeature:function(a){var b=this;var d;var c=b.clusterLayer.getSource().getFeatures();Ext.each(c,function(e){if(!Ext.isEmpty(e.get("features"))){Ext.each(e.get("features"),function(g){if(g.getProperties().properties.id&&a.getProperties().properties.id&&g.getProperties().properties.id===a.getProperties().properties.id){d=e;return false}})}if(!Ext.isEmpty(d)){return false}});return d?d:a}});Ext.define("Basepackage.view.container.WfsSearch",{extend:"Ext.container.Container",xtype:"base-search-wfs",requires:["GeoExt.data.store.Features","GeoExt.grid.column.Symbolizer","Basepackage.util.Animate"],config:{layers:[],wfsServerUrl:null,minSearchTextChars:3,typeDelay:300,allowedFeatureTypeDataTypes:["xsd:string"],groupHeaderTpl:"{name}",searchResultFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:6,fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#8B0000"}),stroke:new ol.style.Stroke({color:"#8B0000",width:4})}),searchResultHighlightFeatureStyleFn:function(a,b){return new ol.style.Style({image:new ol.style.Circle({radius:a,fill:new ol.style.Fill({color:"#EE0000"}),stroke:new ol.style.Stroke({color:"gray",width:3})}),text:b?new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})}):undefined})},searchResultSelectFeatureStyle:new ol.style.Style({image:new ol.style.Circle({radius:8,fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#fff",width:2})}),fill:new ol.style.Fill({color:"#0099CC"}),stroke:new ol.style.Stroke({color:"#0099CC",width:6})}),clusterStyleFn:function(b,a){var c=this.clusterLayer.getSource().distance_/2;if(a>c){a=c}return[new ol.style.Style({image:new ol.style.Circle({radius:a,stroke:new ol.style.Stroke({color:"#fff"}),fill:new ol.style.Fill({color:"#3399CC"})}),text:new ol.style.Text({text:b.toString(),fill:new ol.style.Fill({color:"#fff"})})})]},highLightFeatureOnHoverInGrid:true},layout:"fit",typeDelayTask:null,searchTerm:null,searchResultVectorLayer:null,clusterLayer:null,clusterResults:false,styleCache:[],initComponent:function(){var d=this,e=Ext.ComponentQuery.query("gx_map")[0].getMap();if(Ext.isEmpty(d.getLayers())){Ext.log.error("No layers given to search component!")}if(!d.searchResultVectorLayer){d.searchResultVectorLayer=new ol.layer.Vector({source:new ol.source.Vector(),style:d.getSearchResultFeatureStyle(),visible:!d.clusterResults});e.addLayer(d.searchResultVectorLayer)}if(d.clusterResults&&!d.clusterLayer){var a=new ol.source.Cluster({distance:40,source:d.searchResultVectorLayer.getSource()});d.clusterLayer=new ol.layer.Vector({source:a,style:function(g){var f=g.get("features").length;var h=d.styleCache[f];if(!h){h=d.clusterStyleFn(f,f+10);d.styleCache[f]=h}return h}});e.addLayer(d.clusterLayer);d.searchResultVectorLayer.setStyle(d.clusterStyleFn("",8))}var c=Ext.create("GeoExt.data.store.Features",{map:e,layer:d.searchResultVectorLayer,groupField:"featuretype"});d.items=[{xtype:"textfield",name:"searchTerm",fieldLabel:"Suchbegriff",enableKeyEvents:true,listeners:{change:d.handleKeyDown}},{xtype:"grid",name:"searchresultgrid",hidden:true,hideHeaders:true,title:"Suchergebnisse",store:c,columns:[{xtype:"gx_symbolizercolumn",flex:1},{dataIndex:"displayfield",flex:7,renderer:function(f){return'<span data-qtip="'+f+'">'+f+"</span>"}}],features:[{ftype:"grouping",groupHeaderTpl:d.getGroupHeaderTpl()}],width:200,height:300},{xtype:"button",text:"Zurücksetzen",margin:"10 0 0 0",handler:d.resetSearchGridAndText,scope:d}];d.callParent(arguments);d.on("describeFeatureTypeResponse",d.getFeatures);d.on("getFeatureResponse",d.showSearchResults);d.on("show",d.down("textfield").focus);var b=d.down("grid[name=searchresultgrid]");if(d.getHighLightFeatureOnHoverInGrid()){b.on("itemmouseenter",d.highlightFeature,d);b.on("itemmouseleave",d.unhighlightFeature,d)}b.on("itemclick",d.highlightSelectedFeature,d)},handleKeyDown:function(b){var a=b.up("base-search-wfs"),c=b.getValue();if(c.length<a.getMinSearchTextChars()){return}a.searchTerm=c;a.resetGrid();if(a.typeDelayTask){a.typeDelayTask.cancel()}a.typeDelayTask=new Ext.util.DelayedTask(function(){a.describeFeatureTypes()});a.typeDelayTask.delay(a.getTypeDelay())},resetSearchGridAndText:function(){var a=this;a.down("textfield[name=searchTerm]").setValue("");a.resetGrid()},resetGrid:function(){var a=this;a.searchResultVectorLayer.getSource().clear();a.down("grid[name=searchresultgrid]").hide()},describeFeatureTypes:function(){var b=this,d=[],e;Ext.each(b.getLayers(),function(f){if(f.getSource().getParams){d.push(f.getSource().getParams().LAYERS)}});var c={REQUEST:"DescribeFeatureType",SERVICE:"WFS",VERSION:"1.1.0",OUTPUTFORMAT:"application/json",TYPENAME:d.toString()};var a=b.getWfsServerUrl()+"?";Ext.iterate(c,function(g,f){a+=g+"="+f+"&"});b.setLoading(true);Ext.Ajax.request({url:a,success:function(f){b.setLoading(false);if(Ext.isString(f.responseText)){e=Ext.decode(f.responseText)}else{if(Ext.isObject(f.responseText)){e=f.responseText}else{Ext.log.error("Error! Could not parse describe featuretype response!")}}b.fireEvent("describeFeatureTypeResponse",e)},failure:function(f){b.setLoading(false);Ext.log.error("Error on describe featuretype request:",f)}})},getFeatures:function(f){var d=this;var g=f.featureTypes;var e=d.cleanUpFeatureDataTypes(g);var b=d.getWfsServerUrl();var a=d.setupXmlPostBody(e);var c;d.setLoading(true);Ext.Ajax.request({url:b,method:"POST",xmlData:a,success:function(h){d.setLoading(false);if(Ext.isString(h.responseText)){c=Ext.decode(h.responseText).features}else{if(Ext.isObject(h.responseText)){c=h.responseText.features}else{Ext.log.error("Error! Could not parse GetFeature response!")}}d.fireEvent("getFeatureResponse",c)},failure:function(h){d.setLoading(false);Ext.log.error("Error on GetFeature request:",h)}})},cleanUpFeatureDataTypes:function(c){var a=this,b=[];Ext.each(c,function(e,d){b.push({typeName:e.typeName,properties:[]});Ext.each(e.properties,function(f){if(Ext.Array.contains(a.getAllowedFeatureTypeDataTypes(),f.type)&&f.name.indexOf(" ")<0){b[d].properties.push(f)}})});return b},setupXmlPostBody:function(c){var b=this;var a='<wfs:GetFeature service="WFS" version="1.1.0" outputFormat="application/json" xmlns:wfs="http://www.opengis.net/wfs" xmlns:ogc="http://www.opengis.net/ogc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/WFS-basic.xsd">';Ext.each(c,function(d){Ext.each(d.properties,function(e){a+='<wfs:Query typeName="'+d.typeName+'"><ogc:Filter><ogc:PropertyIsLike wildCard="*" singleChar="." escape="\\" matchCase="false"><ogc:PropertyName>'+e.name+"</ogc:PropertyName><ogc:Literal>*"+b.searchTerm+"*</ogc:Literal></ogc:PropertyIsLike></ogc:Filter></wfs:Query>"})});a+="</wfs:GetFeature>";return a},showSearchResults:function(c){var d=this,b=d.down("grid[name=searchresultgrid]"),e=new ol.format.GeoJSON();if(c.length>0){b.show()}Ext.each(c,function(g){var h=g.id.split(".")[0];var i;Ext.iterate(g.properties,function(l,j){if(j&&j.toString().toLowerCase().indexOf(d.searchTerm)>-1){i=j;return false}});g.properties.displayfield=i;g.properties.featuretype=h;var f=e.readFeatures(g,{dataProjection:"EPSG:31467",featureProjection:"EPSG:31467"})[0];d.searchResultVectorLayer.getSource().addFeature(f)});var a=d.searchResultVectorLayer.getSource().getExtent();if(!Ext.Array.contains(a,Infinity)){d.zoomToExtent(a)}},zoomToExtent:function(b){var a=Ext.ComponentQuery.query("gx_map")[0].getMap();var e=a.getView();var d=ol.animation.pan({source:e.getCenter()});var c=ol.animation.zoom({resolution:e.getResolution()});a.beforeRender(d,c);e.fit(b,a.getSize())},updateRenderer:function(b,a){var c=Ext.getCmp(Ext.query("div[id^=gx_renderer",true,b)[0].id);var d=c.map.getLayers().getArray()[0].getSource();d.getFeatures()[0].setStyle(a)},highlightFeature:function(c,d,f){if(this.enterEventRec===d){return}var g=Ext.ComponentQuery.query("gx_map")[0].getMap();var e;var b;var h;this.enterEventRec=d;ol.Observable.unByKey(this.flashListenerKey);if(this.clusterResults){e=this.getClusterFeatureFromFeature(d.olObject);var a=this.clusterLayer.getStyle()(e,g.getView().getResolution())[0];b=a.getImage().getRadius();h=a.getText().getText()}else{e=d.olObject;b=5}if(c.getSelection()[0]!==d){e.setStyle(this.getSearchResultHighlightFeatureStyleFn()(b,h));this.updateRenderer(f,this.getSearchResultHighlightFeatureStyleFn()(8,h))}if(e){this.flashListenerKey=Basepackage.util.Animate.flashFeature(e,1000,b)}},unhighlightFeature:function(a,b,c){if(this.leaveEventRec===b){return}this.leaveEventRec=b;if(a.getSelection()[0]!==b){b.olObject.setStyle(this.getSearchResultFeatureStyle());if(this.clusterResults){this.updateRenderer(c,this.clusterStyleFn("",8))}else{this.updateRenderer(c,this.getSearchResultFeatureStyle())}}},highlightSelectedFeature:function(a,b,d){var c=a.getStore();c.each(function(f){f.olObject.setStyle(this.getSearchResultFeatureStyle());var e=a.getRowByRecord(f);if(this.clusterResults){this.updateRenderer(e,this.clusterStyleFn("",8))}else{this.updateRenderer(e,this.getSearchResultFeatureStyle())}},this);b.olObject.setStyle(this.getSearchResultSelectFeatureStyle());this.updateRenderer(d,this.getSearchResultSelectFeatureStyle());this.zoomToExtent(b.olObject.getGeometry())},getClusterFeatureFromFeature:function(a){var b=this;var d;var c=b.clusterLayer.getSource().getFeatures();Ext.each(c,function(e){if(!Ext.isEmpty(e.get("features"))){Ext.each(e.get("features"),function(g){if(g.getId()===a.getId()){d=e;return false}})}if(!Ext.isEmpty(d)){return false}});return d}});Ext.define("Basepackage.view.form.CsvImport",{extend:"Ext.form.Panel",xtype:"form-csvimport",config:{grid:null,dataArray:null},initComponent:function(a){var b=this;b.callParent(a);if(!b.getGrid()){Ext.Error.raise("No grid defined for csv-importer.")}},associatonObject:{},bodyPadding:10,items:[{xtype:"filefield",name:"csv_file",fieldLabel:"CSV-Datei",labelWidth:70,width:400,msgTarget:"side",allowBlank:false,buttonText:"Datei auswähen \u2026",validator:function(b){var c=/^.*\.(csv)$/i;var a="Der Datenimport ist nur mit CSV-Dateien möglich.";return c.test(b)||a}}],buttons:[{xtype:"button",name:"importBtn",text:"Importieren",handler:function(a){var b=this.up("form");b.startImport(a)},disabled:true},{text:"Datei einlesen",handler:function(){if(window.FileReader){var d=this.up("form");var b=d.down("filefield");var c=b.extractFileInput().files[0];var a=new FileReader();a.readAsText(c);a.onload=d.onLoad;a.onerror=d.onError}else{Ext.Toast("FileReader are not supported in this browser.")}}}],onLoad:function(d){var c=Ext.ComponentQuery.query("form-csvimport")[0];var b=d.target.result;var a=Ext.util.CSV.decode(b);c.setDataArray(a);c.setupAssociations(a[0],c)},onError:function(a){if(a.target.error.name==="NotReadableError"){Ext.toast("Canno't read file !")}},setupAssociations:function(d,c){var a=c.getGrid().query("gridcolumn[hidden=false]");var b=[];var e=Ext.create("Ext.form.FieldSet",{title:"Felder asozieren",name:"assoFieldset",layout:"form",scrollable:"y",maxHeight:300,collapsible:true,margin:"0 0 30 0"});Ext.each(a,function(f){b.push(f.text)},c);Ext.each(d,function(f){e.add({xtype:"combobox",name:f,fieldLabel:f,store:b,value:c.associatonObject[f],msgTarget:"side"})},c);c.down("button[name=importBtn]").enable();c.add(e)},addToGrid:function(a){var c=this;var b=c.getGrid().getStore();c.setLoading(true);Ext.each(a,function(f,e){if(e>0){var d=this.parseDataFromRow(f);b.add(d)}},c);c.setLoading(false)},parseDataFromRow:function(a){var b=this;var c={};Ext.each(a,function(g,h){var e=b.associatonObject[b.getDataArray()[0][h]];if(!Ext.isEmpty(g)&&!Ext.isEmpty(e)){var d=b.getGrid().down("gridcolumn[text="+e+"]");if(d){var f=d.dataIndex;c[f]=g}else{Ext.Error.raise(e," does not exist. Please check you associationObject.")}}});return Ext.create(this.getGrid().getStore().getModel(),c)},startImport:function(b){var e=this;var a=b.up("form").down("fieldset[name=assoFieldset]").query("combo");var d=[];var c=true;Ext.each(a,function(g){var f=g.getValue();if(Ext.Array.contains(d,f)&&!Ext.isEmpty(f)){g.markInvalid("Diese Feld wurde bereits mit einer anderenSpalte asoziert");c=false}else{this.associatonObject[g.getFieldLabel()]=f}d.push(f)},e);if(c&&e.getDataArray()){e.addToGrid(e.getDataArray())}e.fireEvent("importcomplete",e)}});Ext.define("Basepackage.view.form.Print",{extend:"Ext.form.Panel",xtype:"base-form-print",requires:["Ext.window.Toast","Ext.form.action.StandardSubmit","Basepackage.util.Layer","GeoExt.data.MapfishPrintProvider"],statics:{LAYER_IDENTIFIER_KEY:"_basepackage_printextent_layer_"},defaultListenerScope:true,viewModel:{data:{title:"Drucken",labelDpi:"DPI",printButtonSuffix:"anfordern",printFormat:"pdf",genericFieldSetTitle:"Einstellungen"}},bind:{title:"{title}"},maxHeight:250,autoScroll:true,config:{url:null,store:null},borderColors:["#FF5050","#00CCFF","#FFFF99","#CCFF66"],layout:"anchor",defaults:{anchor:"100%"},bodyPadding:"0 5px 0 0",extentLayer:null,provider:null,defaultType:"textfield",initComponent:function(){var a=this.getUrl();if(!a){this.html="No Url provided!";this.callParent();return}this.callParent();var b=Ext.create("Ext.data.Store",{autoLoad:true,proxy:{type:"jsonp",url:a+"apps.json",callbackKey:"jsonp"},listeners:{load:function(f,e){var g=[];Ext.each(e,function(h){g.push(h.data)});this.down("combo[name=appCombo]").setStore(g)},scope:this}});var c=this.add({xtype:"fieldcontainer",name:"formContainer",layout:"hbox"});var d=c.add({xtype:"fieldcontainer",name:"defaultFieldContainer",layout:"auto",flex:1});d.add({xtype:"combo",name:"appCombo",allowBlank:false,forceSelection:true,store:b,listeners:{select:"onAppSelected",scope:this}});this.on("afterrender",this.addExtentLayer,this);this.on("afterrender",this.addParentCollapseExpandListeners,this);this.on("beforeDestroy",this.cleanupPrintExtent,this)},bbar:[{xtype:"button",name:"createPrint",bind:{text:"{printFormat:uppercase} {printButtonSuffix}"},formBind:true,handler:function(){this.up("form").createPrint()},disabled:true}],createPrint:function(){var k=this;var m={};var p=k.getMapComponent();var f=p.getMap().getView();var h=k.down('combo[name="layout"]').getValue();var l=k.down('combo[name="format"]').getValue();var g={};var i=f.getProjection().getCode();var o=f.getRotation();var n=GeoExt.data.MapfishPrintProvider;var j=n.getSerializedLayers(p,this.layerFilter,this);var c=k.query("fieldset[name=attributes] fieldset");Ext.each(c,function(q){var r=q.name;var t=q.extentFeature.getGeometry().getExtent();var s=q.down('[name="dpi"]').getValue();g[r]={bbox:t,dpi:s,layers:j.reverse(),projection:i,rotation:o}},this);var a=k.query("fieldset[name=attributes]>field[name!=dpi]");Ext.each(a,function(q){if(q.getName()==="legend"){g.legend=k.getLegendObject()}else{if(q.getName()==="scalebar"){g.scalebar=k.getScaleBarObject()}else{if(q.getName()==="northArrow"){g.scalebar=k.getNorthArrowObject()}else{g[q.getName()]=q.getValue()}}}},this);var b=k.getUrl();var e=k.down("combo[name=appCombo]").getValue();m.attributes=g;m.layout=h;var d=Ext.create("Ext.form.Panel",{standardSubmit:true,url:b+e+"/buildreport."+l,method:"POST",items:[{xtype:"textfield",name:"spec",value:Ext.encode(m)}]});d.submit()},listeners:{collapse:"cleanupPrintExtent",resize:"renderAllClientInfos"},addParentCollapseExpandListeners:function(){var a=this.up();a.on({collapse:"cleanupPrintExtent",expand:"renderAllClientInfos",scope:this})},addExtentLayer:function(){var d=Ext.ComponentQuery.query("gx_map")[0];var a=null;var b=this.self.LAYER_IDENTIFIER_KEY;d.getLayers().forEach(function(f){if(f.get(b)===true){a=f}});if(a){d.removeLayer(a)}var c=new ol.layer.Vector({source:new ol.source.Vector()});c.set(b,true);var e=Basepackage.util.Layer.KEY_DISPLAY_IN_LAYERSWITCHER;c.set(e,false);d.addLayer(c);this.extentLayer=c},layerFilter:function(c){var e=!!c.checked;var d=e&&!!c.get("name");var a=d&&(c.get("opacity")>0);var b=a&&(c.get(Basepackage.util.Layer.KEY_DISPLAY_IN_LAYERSWITCHER)!==false);if(e&&d&&a&&b){if(c instanceof ol.layer.Vector&&c.getSource().getFeatures().length<1){return false}return true}else{return false}},legendLayerFilter:function(a){if(a.checked&&a.get("name")&&a.get("name")!=="Hintergrundkarte"&&a.get("opacity")>0){return true}else{return false}},getMapComponent:function(){return Ext.ComponentQuery.query("gx_component_map")[0]},onPrintProviderReady:function(a){this.addGenericFieldset(a)},onAppSelected:function(a){this.provider=Ext.create("GeoExt.data.MapfishPrintProvider",{url:this.getUrl()+a.getValue()+"/capabilities.json",listeners:{ready:"onPrintProviderReady",scope:this}})},removeGenericFieldset:function(){var b=this;var a=b.down('[name="generic-fieldset"]');if(a){b.remove(a)}},addGenericFieldset:function(d){var c=this;var b=c.down('[name="generic-fieldset"]');var a=c.down("fieldcontainer[name=defaultFieldContainer]");if(b){b.removeAll()}else{a.add({xtype:"fieldset",bind:{title:"{genericFieldSetTitle}"},name:"generic-fieldset",layout:"anchor",defaults:{anchor:"100%"}})}this.addLayoutCombo(d);this.addFormatCombo(d);this.fireEvent("genericfieldsetadded")},addFormatCombo:function(d){var a=this.down("fieldset[name=generic-fieldset]");var c=d.capabilityRec.get("formats");var b={xtype:"combo",name:"format",displayField:"name",editable:false,forceSelection:true,queryMode:"local",valueField:"name",store:c,bind:{value:"{printFormat}"}};a.add(b)},addLayoutCombo:function(c){var a=this.down("fieldset[name=generic-fieldset]");var d=c.capabilityRec.layouts();var b={xtype:"combo",name:"layout",displayField:"name",editable:false,forceSelection:true,queryMode:"local",valueField:"name",store:d,listeners:{change:this.onLayoutSelect,scope:this}};b=a.add(b);b.select(d.getAt(0))},onLayoutSelect:function(f,e){var d=this,c=d.down("fieldset[name=attributes]"),g=f.findRecordByValue(e),b,a=d.down("fieldcontainer[name=defaultFieldContainer]");d.remove(c);if(a&&c){a.remove(c)}b=a.add({xtype:"fieldset",title:"Eigenschaften",name:"attributes",layout:"anchor",defaults:{anchor:"100%"}});g.attributes().each(function(h){this.addAttributeFields(h,b)},this);this.renderAllClientInfos();d.down('button[name="createPrint"]').enable()},getMapAttributeFields:function(b){var d=b.get("clientInfo");var c=b.get("name")+" ("+d.width+" × "+d.height+")";var a={xtype:"fieldset",clientInfo:Ext.clone(d),title:c,name:b.get("name"),items:{xtype:"combo",name:"dpi",editable:false,forceSelection:true,bind:{fieldLabel:"{labelDpi}"},queryMode:"local",labelWidth:40,width:150,value:d.dpiSuggestions[0],store:d.dpiSuggestions}};return a},getCheckBoxAttributeFields:function(a){return{xtype:"checkbox",name:a.get("name"),checked:true,fieldLabel:a.get("name"),boxLabel:"\u2026verwenden?"}},getNorthArrowAttributeFields:function(a){return this.getCheckBoxAttributeFields(a)},getLegendAttributeFields:function(a){return this.getCheckBoxAttributeFields(a)},getScalebarAttributeFields:function(a){return this.getCheckBoxAttributeFields(a)},getStringField:function(a){return{xtype:"textfield",name:a.get("name"),fieldLabel:a.get("name"),allowBlank:false}},addAttributeFields:function(b,a){var d=this.getMapComponent().getMap().getView();var c;switch(b.get("type")){case"MapAttributeValues":c=this.getMapAttributeFields(b);d.on("propertychange",this.renderAllClientInfos,this);break;case"NorthArrowAttributeValues":c=this.getNorthArrowAttributeFields(b);break;case"ScalebarAttributeValues":c=this.getScalebarAttributeFields(b);break;case"LegendAttributeValue":c=this.getLegendAttributeFields(b);break;case"String":c=this.getStringField(b);break;case"DataSourceAttributeValue":Ext.toast("Data Source not ye supported");c=this.getStringField(b);break;default:break}if(c){a.add(c)}},renderAllClientInfos:function(){var a=this;if(a._renderingClientExtents||a.getCollapsed()!==false){return}a._renderingClientExtents=true;a.extentLayer.getSource().clear();var b=a.query("fieldset[name=attributes] fieldset");Ext.each(b,function(c){var d=GeoExt.data.MapfishPrintProvider.renderPrintExtent(this.getMapComponent(),a.extentLayer,c.clientInfo);c.extentFeature=d},this);delete a._renderingClientExtents},cleanupPrintExtent:function(){var a=this;a.extentLayer.getSource().clear()},getLegendObject:function(){var d=[];var b;var a;var c=GeoExt.data.MapfishPrintProvider.getLayerArray(this.getMapComponent().getLayers().getArray());var f=Ext.Array.filter(c,this.legendLayerFilter);Ext.each(f,function(g){if(g.get("legendUrl")){d.push({icons:[g.get("legendUrl")],name:g.get("name")})}else{if(g.getSource() instanceof ol.source.TileWMS){b=g.getSource().getUrls()[0];a=b+"?TRANSPARENT=TRUE&VERSION=1.1.1&SERVICE=WMS&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fgif&SCALE=6933504.262556662&LAYER=";a+=g.getSource().getParams().LAYERS;d.push({icons:[a],name:g.get("name")})}else{if(g.getSource() instanceof ol.source.ImageWMS){b=g.getSource().getUrl();a=b+"?TRANSPARENT=TRUE&VERSION=1.1.1&SERVICE=WMS&REQUEST=GetLegendGraphic&EXCEPTIONS=application%2Fvnd.ogc.se_xml&FORMAT=image%2Fgif&SCALE=6933504.262556662&LAYER=";a+=g.getSource().getParams().LAYERS;d.push({icons:[a],name:g.get("name")})}}}});var e={classes:d,name:""};return e},getNorthArrowObject:function(){var a={};return a},getScaleBarObject:function(){var a={};return a},getLayoutRec:function(){var b=this.down('combo[name="layout"]');var a=b.getValue();var c=b.findRecordByValue(a);return c}});Ext.define("Basepackage.view.grid.FeaturePropertyGrid",{xtype:"base-grid-featurepropertygrid",extend:"Ext.grid.property.Grid",requires:[],width:300,config:{olFeature:null,propertyWhiteList:null},initComponent:function(){var a=this;if(!a.getOlFeature()){Ext.Error.raise("No Feature set for FeaturePropertyGrid.")}a.callParent([arguments]);a.on("afterrender",a.setUpFeatureValues,a);a.on("beforeedit",function(){return false})},setUpFeatureValues:function(){var b=this;var c={};var a=b.getColumns()[1];a.renderer=function(e,d){d.tdAttr='data-qtip="'+e+'"';return e};Ext.each(b.getPropertyWhiteList(),function(d){c[d]=b.getOlFeature().get(d)});if(c){b.setSource(c)}else{Ext.Error.raise("Feature in FeaturePropertyGrid has no values.")}}});Ext.define("Basepackage.view.panel.Header",{extend:"Ext.panel.Panel",xtype:"base-panel-header",requires:["Ext.Img"],config:{addLogo:true,logoUrl:"resources/images/logo.png",link:null,logoAltText:"Logo",logoHeight:80,logoWidth:200,logoMargin:"0 50px",additionalItems:[]},layout:{type:"hbox",align:"stretch"},padding:5,cls:"basepackage-header",items:[],initComponent:function(){var a=this;if(a.getAddLogo()===true){a.addLogoItem()}var b=a.getAdditionalItems();if(!Ext.isEmpty(b)&&Ext.isArray(b)){Ext.each(b,function(c){a.items.push(c)})}a.callParent()},addLogoItem:function(){var a=this;var b={xtype:"image",margin:a.getLogoMargin(),alt:a.getLogoAltText(),src:a.getLogoUrl(),height:a.getLogoHeight(),width:a.getLogoWidth(),autoEl:{tag:"a",href:a.getLink()}};a.items.push(b)},setBackgroundColor:function(a){this.setStyle({"background-color":a,background:"linear-gradient(to right, white, "+a+")"})}});Ext.define("Basepackage.view.view.LayerSet",{extend:"Ext.view.View",xtype:"base-view-layerset",requires:["Ext.data.Store"],layerSetUrl:null,defaultImagePath:"classic/resources/img/themes/",demoThumb:"https://www.terrestris.de/wp-content/uploads/2014/03/logo_terrestris_small3.png",width:400,height:300,singleSelect:true,cls:"img-chooser-view",overItemCls:"x-view-over",itemSelector:"div.thumb-wrap",tpl:null,initComponent:function(){var b=this,a;if(Ext.isEmpty(b.layerSetUrl)){a=Ext.create("Ext.data.Store",{fields:["name","thumb","url","type"],sorters:"type",data:[{title:"Stadtkarte",name:"stadtkarte",thumb:b.demoThumb},{title:"Verkehr",name:"verkehr",thumb:b.demoThumb},{title:"Umwelt",name:"umwelt",thumb:b.demoThumb}]})}else{a=Ext.create("Ext.data.Store",{autoLoad:true,fields:["name","title","thumb"],remoteSort:false,sorters:"type",proxy:{type:"ajax",url:b.layerSetUrl,reader:{type:"json"}}})}if(Ext.isEmpty(b.tpl)){b.tpl=['<tpl for=".">','<div class="thumb-wrap">','<div class="thumb">',"<tpl if=\"thumb.indexOf('http') &gt;= 0\">",'<img src="{thumb}" />',"<tpl else>",'<img src="'+b.defaultImagePath,'{thumb}" />',"</tpl>","</div>","<span>{title}</span>","</div>","</tpl>"]}b.store=a;this.callParent(arguments)}});Ext.define("Basepackage.view.panel.LayerSetChooser",{extend:"Ext.panel.Panel",xtype:"base-panel-layersetchooser",requires:["Basepackage.view.view.LayerSet"],viewModel:{data:{title:"Themen Auswahl"}},bind:{title:"{title}"},region:"center",layout:"fit",minWidth:150,minHeight:170,cls:"img-chooser-dlg",layerSetUrl:null,scrollable:"y",bbar:[{xtype:"textfield",name:"filter",fieldLabel:"Filter",labelAlign:"left",labelWidth:45,flex:1}],initComponent:function(){if(Ext.isEmpty(this.items)){this.items=[{xtype:"base-view-layerset",scrollable:true,layerSetUrl:this.layerSetUrl}]}this.callParent(arguments);this.down("base-view-layerset").on("select",this.onLayerSetSelect);this.down("base-view-layerset").on("itemclick",this.onLayerSetClick);this.down("base-view-layerset").on("itemdblclick",this.onLayerSetDblClick)},onLayerSetSelect:function(a,d,b,c){this.up("base-panel-layersetchooser").fireEvent("select",a,d,b,c)},onLayerSetClick:function(b,f,e,c,a,d){b.up("base-panel-layersetchooser").fireEvent("itemclick",b,f,e,c,a,d)},onLayerSetDblClick:function(b,f,e,c,a,d){b.up("base-panel-layersetchooser").fireEvent("itemdblclick",b,f,e,c,a,d)},filterLayerSetsByText:function(e,b,d,f){var c=f.scope.down("base-view-layerset"),a=c.getStore();a.getFilters().replaceAll({property:"name",anyMatch:true,value:b})}});Ext.define("Basepackage.view.panel.LegendTree",{extend:"GeoExt.tree.Panel",xtype:"base-panel-legendtree",requires:["Basepackage.ux.RowExpanderWithComponents"],viewModel:{data:{}},viewConfig:{getRowClass:function(a){return this.up().getCssForRow(a)}},layout:"fit",width:250,height:300,collapsible:true,collapsed:true,hideCollapseTool:true,collapseDirection:"bottom",titleCollapse:true,titleAlign:"center",rootVisible:false,allowDeselect:true,selModel:{mode:"MULTI"},cls:"base-legend-panel",initiallyCollapsed:null,initComponent:function(){var a=this;if(a.collapsed&&a.hideCollapseTool){a.collapsed=false;a.initiallyCollapsed=true;Ext.log.info('Ignoring configuration "collapsed" and instead setup a one-time afterlayout listener that will collapse the panel (this is possibly due to a bug in ExtJS 6)')}a.hideHeaders=true;a.lines=false;a.plugins=[{ptype:"rowexpanderwithcomponents",hideExpandColumn:true,rowBodyCompTemplate:a.rowBodyCompTemplate}];a.callParent();if(a.initiallyCollapsed){a.on("afterlayout",function(){this.collapse()},a,{single:true,delay:100});a.initiallyCollapsed=null}},rowBodyCompTemplate:{xtype:"container",items:[{xtype:"image",src:'{{record.getOlLayer().get("legendUrl")}}',height:'{{record.getOlLayer().get("legendHeight")}}',alt:'{{record.getOlLayer().get("legendUrl")}}'}]},expandAllBodies:function(){var a=this;if((!a.getBodyInitiallyCollapsed())&&a.plugins.length>0){a.getStore().each(function(b,c){a.plugins[0].toggleRow(c,b)})}},getColorFromRow:function(c){var b=this;var a=c.getData().get("treeColor");if(!Ext.isDefined(a)&&!c.isLeaf()&&c.childNodes.length>0){Ext.each(c.childNodes,function(d){a=b.getColorFromRow(d);if(Ext.isDefined(a)){return false}})}return a},getCssForRow:function(e){var b=this.getColorFromRow(e);if(!Ext.isDefined(b)){return"my-body-class"}var a;if(b===null){a="stylesheet-null"}else{a="stylesheet-"+b.replace(/[\(\),\. ]+/g,"-")}var d=Ext.DomQuery.selectNode("#"+a);if(d){return a}else{var c="."+a+" {  background-color: "+b+"; background:linear-gradient(to right, white, "+b+");}";Ext.util.CSS.createStyleSheet(c,a);return a}}});Ext.define("Basepackage.view.panel.Menu",{extend:"Ext.panel.Panel",xtype:"base-panel-menu",requires:["Ext.layout.container.Accordion"],viewModel:{data:{closedMenuTitle:"Menu schließen",openedMenuTitle:"Menu anzeigen"}},defaultListenerScope:true,headerPosition:"bottom",collapsible:true,hideCollapseTool:true,titleCollapse:true,titleAlign:"center",activeItem:1,defaults:{hideCollapseTool:true,titleCollapse:true},layout:{type:"accordion",titleCollapse:false,animate:true},items:[],listeners:{collapse:"setTitleAccordingToCollapsedState",expand:"setTitleAccordingToCollapsedState",afterrender:"setTitleAccordingToCollapsedState"},setTitleAccordingToCollapsedState:function(a){if(a.getCollapsed()===false){a.setBind({title:"{closedMenuTitle}"})}else{a.setBind({title:"{openedMenuTitle}"})}}});Ext.define("Basepackage.view.panel.MapContainer",{extend:"Ext.panel.Panel",xtype:"base-panel-mapcontainer",requires:["Ext.dom.Query","GeoExt.data.store.LayersTree","GeoExt.component.OverviewMap","Basepackage.util.Layer","Basepackage.view.component.Map","Basepackage.view.panel.LegendTree","Basepackage.view.panel.Menu","Basepackage.view.button.ZoomIn","Basepackage.view.button.ZoomOut","Basepackage.view.button.ZoomToExtent","Basepackage.view.button.ToggleLegend"],viewModel:{data:{titleLegendPanel:"Legende"}},layout:"absolute",header:false,mapPanel:null,config:{mapComponentConfig:{xtype:"base-component-map",anchor:"100% 100%"},menuConfig:{xtype:"base-panel-menu",width:300,items:[]},toolbarConfig:{xtype:"toolbar",vertical:true,width:50,cls:"base-map-tools",x:0,y:0,defaults:{scale:"large"}},overviewMapConfig:{xtype:"gx_overviewmap",magnification:10,width:400,height:150,padding:5,cls:"base-overview-map",hidden:true,layers:[new ol.layer.Tile({source:new ol.source.MapQuest({layer:"sat"})})]},overviewMapToggleButtonConfig:{xtype:"button",scale:"large",helpKey:"base-overview-map-button",cls:"base-overview-map-button",glyph:"xf0ac@FontAwesome",enableToggle:true},legendPanelConfig:{xtype:"base-panel-legendtree",width:250,height:300,layout:"fit",collapsible:true,collapsed:true,hideCollapseTool:true,collapseDirection:"bottom",titleCollapse:true,titleAlign:"center",rootVisible:false,bind:{title:"{titleLegendPanel}"}},additionalItems:[]},initComponent:function(){var a=this;a.callParent();a.addMapComponent();a.addMenu();a.addToolbar();a.addOverviewMap();a.addOverviewMapToggleButton();a.addAdditionalItems();a.on("afterrender",a.addLegendPanel,a,{single:true})},addMapComponent:function(){var a=this;var b=a.getMapComponentConfig();a.add(b);a.mapPanel=a.down(b.xtype)},addMenu:function(){var a=this;var b=a.getMenuConfig();a.add(b)},addToolbar:function(){var b=this;var a=b.getToolbarConfig();a.items=b.buildToolbarItems();b.add(a)},addOverviewMap:function(){var b=this;var a=b.getOverviewMapConfig();if(!a.parentMap&&b.mapPanel){a.parentMap=b.mapPanel.getMap()}b.add(a)},addOverviewMapToggleButton:function(){var a=this;var b=a.getOverviewMapToggleButtonConfig();if(!b.toggleHander&&a.toggleOverviewMap){b.toggleHandler=a.toggleOverviewMap}if(!b.scope){b.scope=a}a.add(b)},addAdditionalItems:function(){var a=this;var b=a.getAdditionalItems();a.add(b)},addLegendPanel:function(){var b=this;var a=b.getLegendPanelConfig();if(!a.store&&b.mapPanel){var c=Ext.create("GeoExt.data.store.LayersTree",{layerGroup:b.mapPanel.getMap().getLayerGroup(),showLayerGroupNode:false,filters:[function(g){var f=g.data;var d=Basepackage.util.Layer;var e=d.KEY_DISPLAY_IN_LAYERSWITCHER;if(f.get(e)===false){return false}return true}]});a.store=c}b.add(a)},buildToolbarItems:function(){var a=[{xtype:"base-button-zoomin"},{xtype:"base-button-zoomout"},{xtype:"base-button-zoomtoextent"},{xtype:"base-button-togglelegend"}];return a},toggleOverviewMap:function(b,c){var a=b.up("base-panel-mapcontainer").down("gx_overviewmap");if(c){a.show(b)}else{a.hide(b)}b.blur();this.toggleScalelineAdjustment();this.toggleScalecomboAdjustment()},toggleScalelineAdjustment:function(){var a=Ext.dom.Query.select(".ol-scale-line")[0];var b;if(a){b=Ext.get(a)}if(b){b.toggleCls("base-scaline-adjusted")}},toggleScalecomboAdjustment:function(){var a=Ext.ComponentQuery.query("base-combo-scale")[0];var b;if(a){b=a.getEl()}if(b){b.toggleCls("base-combo-scale-adjusted")}}});